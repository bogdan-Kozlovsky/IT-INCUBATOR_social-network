{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Login/style.module.css","components/Navigation/navigation.module.scss","components/Users/users.module.css","components/Header/Header.module.css","enums/patch.ts","redux/reducer/app-reducer.tsx","common/hook/selectorHook.ts","redux/reducer/selectors.ts","common/Error/Error.tsx","assets/images/loader.gif","common/preloader/Preloader.tsx","components/AddMessageForm/AddMessageForm.tsx","redux/reducer/dialogs-reducer.ts","components/Dialogs/Dialogs.tsx","assets/images/logout.svg","assets/images/users.png","api/config/index.ts","api/auth/index.ts","api/security/index.ts","redux/reducer/auth-reducer.ts","components/Header/Header.tsx","common/FromControls/FormControls.tsx","utils/validators.ts","components/Login/Login.tsx","assets/images/likeActive.svg","assets/images/likeNoActive.svg","assets/images/post.svg","api/profile/index.ts","redux/reducer/profile-reducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","assets/images/pencil.svg","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Me/Me.tsx","components/Navigation/Navigation.tsx","components/Profile/Profile.tsx","assets/images/leftArrow.svg","assets/images/rightArrow.svg","common/Paginator/Paginator.tsx","api/user/index.ts","redux/reducer/users-reducer.ts","components/Users/User.tsx","components/Users/Users.tsx","App.tsx","redux/store.ts","index.tsx","common/Paginator/paginator.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","common/Error/error.module.css","common/preloader/style.module.css","common/FromControls/FormControls.module.css"],"names":["module","exports","PATH","RESPONSEFIGURES","initialState","initialized","progress","error","initializeSuccessAC","value","type","progressAC","errorAC","useAppSelector","useSelector","ErrorFunc","dispatch","setTimeout","selectIsAuth","state","auth","selectDialogs","dialogsPage","selectInitialized","app","selectProfile","profilePage","selectUsers","usersPage","selectError","Error","className","style","wrapper","block","Preloader","s","box","img","src","loading","alt","AddMessageFormRedux","reduxForm","form","handleSubmit","onSubmit","Field","component","name","placeholder","dialogs","id","messages","message","Dialogs","useDispatch","isAuth","dialogsElements","map","item","messageElements","dialogsItems","values","newMessageBody","reset","to","LOGIN","instance","axios","create","baseURL","withCredentials","headers","authApi","get","email","password","rememberMe","captcha","post","delete","securityApi","undefined","login","captchaUrl","setAuthUserDataAC","payload","getCaptchaUrlSuccessAC","getAuthUserDataThunk","a","response","data","resultCode","zeroRequest","Header","profile","header","headerLogoText","loginBlock","headerNavigateBox","avatar","photos","small","usersIcons","btn","onClick","text","logout","logoutIcon","FormControl","input","meta","props","child","hasError","touched","styles","formControl","children","Textarea","restProps","Input","createField","validators","validate","maxLength","required","LoginReduxForm","label","inputCheckbox","color","Login","ME","loginWrapper","subTitle","link","href","decor","formData","tenRequest","url","length","stopSubmit","_error","profileApi","userId","status","put","photoFile","FormData","append","posts","v1","likesCount","setStatusAC","getUserProfileTC","getStatusTC","Post","counter","counterAC","icons","postIcons","likesIcon","likesActive","likes","MyPosts","memo","myPosts","subtitle","AddPostFormRedux","newPostBody","maxLength10","boxBtn","ProfileDataFormReduxForm","Object","keys","contacts","key","ProfileStatus","myId","console","log","ProfileStatusEditMode","useState","editMode","setEditMode","setValue","statusInput","onChange","e","currentTarget","onBlur","updateStatusTC","autoFocus","onDoubleClick","statusBox","pencilDecor","pencil","ProfileInfo","photo","large","changeAvatarBox","images","inputFile","file","files","dataChangesBox","title","initialValues","getState","Promise","reject","saveProfileTC","goToEditMode","edit","ProfileData","tbody","fullName","aboutMe","lookingForAJob","contactTitle","contactValue","Contact","Me","useEffect","Number","width","Navigation","cn","navigation__items","navigation","navigation__item","isActive","navigation__link","navigation__active","DIALOGS","USERS","Profile","useParams","Paginator","pageSize","totalUsersCount","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pages","i","push","wrapperPaginator","arrow","leftArrow","filter","p","span","active","rightArrow","usersAPI","getUsers","then","unfollow","follow","users","isFetching","followingInProgress","followAC","unfollowAC","setCurrentPageAC","toggleIsFetchingAC","toggleIsFollowingProgressAC","getUsersTC","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","User","user","onHandlerUnfollow","bind","onHandlerFollow","PROFILE","userPhoto","nameSpan","followed","disabled","some","Users","wrapperUsers","pageNumber","boxUser","u","App","path","element","reducers","combineReducers","action","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f137c61a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__5RQK7\",\"images\":\"ProfileInfo_images__2ZQ9B\",\"wrapper\":\"ProfileInfo_wrapper__ar6Hn\",\"label\":\"ProfileInfo_label__2k_Nw\",\"changeAvatarBox\":\"ProfileInfo_changeAvatarBox__2IZTw\",\"inputFile\":\"ProfileInfo_inputFile__2MHjY\",\"dataChangesBox\":\"ProfileInfo_dataChangesBox__1v_m_\",\"title\":\"ProfileInfo_title__3LiCi\",\"pencilDecor\":\"ProfileInfo_pencilDecor__2pCnK\",\"statusBox\":\"ProfileInfo_statusBox__1evDX\",\"statusInput\":\"ProfileInfo_statusInput__2ecQD\",\"edit\":\"ProfileInfo_edit__3RPCH\",\"tbody\":\"ProfileInfo_tbody__cjvlY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"style_loginWrapper__N9tP0\",\"box\":\"style_box__3bekn\",\"subTitle\":\"style_subTitle__3q87b\",\"link\":\"style_link__32jd_\",\"text\":\"style_text__nIWJu\",\"decor\":\"style_decor__2CYM6\",\"input\":\"style_input__2QUrT\",\"label\":\"style_label__3fuOR\",\"inputCheckbox\":\"style_inputCheckbox__24xM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"navigation_navigation__1kz7S\",\"navigation__item\":\"navigation_navigation__item__3lnvr\",\"navigation__link\":\"navigation_navigation__link__EVboG\",\"navigation__active\":\"navigation_navigation__active__3gih1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperUsers\":\"users_wrapperUsers__1WQpu\",\"boxUser\":\"users_boxUser__vAgjs\",\"wrapper\":\"users_wrapper__1O3s3\",\"userPhoto\":\"users_userPhoto__1H41c\",\"name\":\"users_name__vpwOP\",\"status\":\"users_status__3w5ee\",\"nameSpan\":\"users_nameSpan__2tpcB\",\"btn\":\"users_btn__1199v\",\"loader\":\"users_loader__3AMDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3q43m\",\"wrapper\":\"Header_wrapper__qew8b\",\"btn\":\"Header_btn__hO9Xg\",\"logout\":\"Header_logout__3j1kR\",\"text\":\"Header_text__XHZIG\",\"avatar\":\"Header_avatar__2lwXB\",\"headerLogoText\":\"Header_headerLogoText__3kfQF\",\"headerNavigateBox\":\"Header_headerNavigateBox__1LA3O\",\"login\":\"Header_login__2quml\"};","export enum PATH {\r\n  ME = '/',\r\n  PROFILE = '/profile',\r\n  DIALOGS = '/dialogs',\r\n  USERS = '/users',\r\n  LOGIN = '/login',\r\n  ERROR_404 = '404',\r\n}\r\n\r\nexport enum RESPONSEFIGURES {\r\n  zeroRequest = 0,\r\n  tenRequest = 0\r\n}","// initial state\r\nexport type InitialStateType = {\r\n  initialized: boolean\r\n  progress: boolean\r\n  error: string | null\r\n}\r\n\r\n// type\r\nconst initialState = {\r\n  initialized: false,\r\n  progress: true,\r\n  error: null,\r\n};\r\nexport type GeneralType =\r\n  ReturnType<typeof initializeSuccessAC>\r\n  | ReturnType<typeof errorAC>\r\n  | ReturnType<typeof progressAC>\r\n\r\n// reducer\r\nexport const appReducer = (state: InitialStateType = initialState, action: GeneralType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'INITIALIZED-SUCCESS':\r\n      return { ...state, initialized: action.value };\r\n    case 'APP-ERROR':\r\n      return { ...state, error: action.value };\r\n    case 'PROGRESS':\r\n      return { ...state, progress: action.value };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// action creator\r\nexport const initializeSuccessAC = (value: boolean) => ({\r\n  type: 'INITIALIZED-SUCCESS', value,\r\n} as const);\r\n\r\nexport const progressAC = (value: boolean) => ({\r\n  type: 'PROGRESS', value,\r\n} as const);\r\n\r\nexport const errorAC = (value: any) => ({\r\n  type: 'APP-ERROR', value,\r\n} as const);\r\n\r\n// thunk\r\n// export const initializeAppTC = () => async (dispatch: any) => {\r\n//   dispatch(getAuthUserDataThunk());\r\n//   // dispatch(initializeSuccessAC(true))\r\n// };","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { errorAC } from 'redux/reducer/app-reducer';\nimport { AppStateType } from 'redux/store';\n\nexport const useAppSelector: TypedUseSelectorHook<AppStateType> = useSelector;\n\nexport const ErrorFunc = (error: any, dispatch: Dispatch) => {\n  if (error) {\n    dispatch(errorAC(error));\n    const callTimer = 2000;\n    setTimeout(() => {\n      dispatch(errorAC(null));\n    }, callTimer);\n  }\n};\n","import { AppStateType } from 'redux/store';\r\n\r\n// auth\r\nexport const selectIsAuth = (state: AppStateType) => state.auth;\r\n\r\n// dialogs\r\nexport const selectDialogs = (state: AppStateType) => state.dialogsPage;\r\n\r\n// app\r\nexport const selectInitialized = (state: AppStateType) => state.app;\r\n\r\n// profile\r\nexport const selectProfile = (state: AppStateType) => state.profilePage;\r\n\r\n// users\r\nexport const selectUsers = (state: AppStateType) => state.usersPage;\r\n\r\n// error\r\nexport const selectError = (state: AppStateType) => state.app.error;\r\n\r\n","import React from 'react';\n\nimport style from './error.module.css';\n\nimport { useAppSelector } from 'common/hook/selectorHook';\nimport { selectError } from 'redux/reducer/selectors';\n\nexport const Error = () => {\n  const error = useAppSelector(selectError);\n  return (\n    <div className={style.wrapper}>\n      <div className={style.block}>\n        {error}\n      </div>\n    </div>\n  );\n};\n\n","export default __webpack_public_path__ + \"static/media/loader.65c3f468.gif\";","import React from 'react';\n\nimport s from './style.module.css';\n\nimport loading from 'assets/images/loader.gif';\n\nexport const Preloader = () => (\n  <div className={s.box}>\n    <img className={s.img} src={loading} alt='loading' />\n  </div>\n);\n","import React from 'react';\n\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\n\nimport { AddMessageFormType } from '../Dialogs/Dialogs';\n\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormType>> = ({ handleSubmit }) => (\n  <form onSubmit={handleSubmit}>\n    <Field\n      component='textarea'\n      name='newMessageBody'\n      className='textArea'\n      placeholder='Enter your message'\n    />\n    <div>\n      <button type='submit' className='btn'>Add message</button>\n    </div>\n  </form>\n);\nexport const AddMessageFormRedux = reduxForm<AddMessageFormType>({ form: 'dialogAddMessageForm' })(AddMessageForm);","// type\r\nexport type DialogType = {\r\n  message: string\r\n  id: number\r\n}\r\nexport type PostsType = {\r\n  name: string\r\n  id: number\r\n}\r\ntype GlobalReducerType = | ReturnType<typeof sendMessageAC>\r\n\r\nexport type InitialStateType = {\r\n  dialogs: Array<PostsType>\r\n  messages: Array<DialogType>\r\n}\r\n\r\n// initialState\r\nconst initialState: InitialStateType = {\r\n  dialogs: [\r\n    { id: 1, name: 'Slava' },\r\n    { id: 2, name: 'Borya' },\r\n    { id: 3, name: 'Igor' },\r\n    { id: 4, name: 'Viktor' },\r\n  ],\r\n  messages: [\r\n    { id: 1, message: 'Hi how are you doing' },\r\n    { id: 2, message: 'I heard that you have problems' },\r\n    { id: 3, message: 'how is your health today' },\r\n    { id: 4, message: 'Where had you been?' },\r\n  ],\r\n};\r\n\r\n// reducer\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: GlobalReducerType): InitialStateType => {\r\n  switch (action.type) {\r\n    case  'SEND-MESSAGE':\r\n      return { ...state, messages: [...state.messages, { id: 6, message: action.newMessageBody }] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// action Creator\r\nexport const sendMessageAC = (newMessageBody: string) => ({ type: 'SEND-MESSAGE', newMessageBody } as const);","import React from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { reset } from 'redux-form';\r\n\r\nimport s from './Dialogs.module.css';\r\n\r\nimport { useAppSelector } from 'common/hook/selectorHook';\r\nimport { AddMessageFormRedux } from 'components/AddMessageForm/AddMessageForm';\r\nimport { PATH } from 'enums/patch';\r\nimport { DialogType, PostsType, sendMessageAC } from 'redux/reducer/dialogs-reducer';\r\nimport { selectDialogs, selectIsAuth } from 'redux/reducer/selectors';\r\n\r\n// type\r\nexport type AddMessageFormType = {\r\n  newMessageBody: string\r\n}\r\n\r\nexport const Dialogs = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { dialogs, messages } = useAppSelector(selectDialogs);\r\n  const { isAuth } = useAppSelector(selectIsAuth);\r\n\r\n  const dialogsElements = dialogs.map(({ id, name }: PostsType) => (<div className={s.item} key={id}>{name}</div>));\r\n  const messageElements = messages.map(({ id, message }: DialogType) => (\r\n    <div className={s.item} key={id}>{message}</div>));\r\n\r\n  const addNewMessage = (values: AddMessageFormType) => {\r\n    dispatch(sendMessageAC(values.newMessageBody));\r\n    dispatch(reset('dialogAddMessageForm'));\r\n  };\r\n\r\n  if (!isAuth) {\r\n    return <Navigate to={PATH.LOGIN} />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.block}>\r\n        <div className={s.dialogsItems}>\r\n          {dialogsElements}\r\n        </div>\r\n        <div className={s.messages}>\r\n          {messageElements}\r\n        </div>\r\n      </div>\r\n\r\n      <AddMessageFormRedux onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/logout.1bf8fe5c.svg\";","export default __webpack_public_path__ + \"static/media/users.998e6aeb.png\";","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  withCredentials: true,\r\n  headers: {\r\n    'API-KEY': 'edbb6621-0047-4274-8a4c-f1d2a1bf4727',\r\n  },\r\n});","import { instance } from 'api/config';\nimport { AuthMeResponseType, ResponseType } from 'api/type';\n\nexport const authApi = {\n  me() {\n    // return instance.get<ResponseType<{ data: AuthMeResponseType }>>('auth/me')\n    return instance.get('auth/me');\n  },\n  login(email: string, password: string, rememberMe: boolean, captcha: string) {\n    return instance.post<ResponseType<{ data: AuthMeResponseType }>>(`auth/login`, {\n      email,\n      password,\n      rememberMe,\n      captcha,\n    });\n  },\n  logout() {\n    return instance.delete<ResponseType>(`/auth/login`);\n  },\n};","import { instance } from 'api/config';\r\n\r\nexport const securityApi = {\r\n  getCaptchaUrl() {\r\n    return instance.get<{ url: string }>(`security/get-captcha-url`);\r\n  },\r\n};","import { Dispatch } from 'redux';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nimport { authApi } from 'api/auth/index';\r\nimport { securityApi } from 'api/security/index';\r\nimport { ErrorFunc } from 'common/hook/selectorHook';\r\nimport { RESPONSEFIGURES } from 'enums/patch';\r\nimport { initializeSuccessAC, progressAC } from 'redux/reducer/app-reducer';\r\nimport { ThunkType } from 'utils/thunkType';\r\n\r\n// type\r\nexport type InitialStateType = {\r\n  // id: number | null\r\n  id: string | undefined\r\n  email: string | null\r\n  login: string | null\r\n  isAuth: boolean\r\n  captchaUrl: string | null\r\n}\r\nconst initialState = {\r\n  id: undefined,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaUrl: null,\r\n};\r\nexport type GeneralType =\r\n  | ReturnType<typeof setAuthUserDataAC>\r\n  | ReturnType<typeof getCaptchaUrlSuccessAC>\r\n\r\n// reducer\r\nexport const authReducer = (state: InitialStateType = initialState, action: GeneralType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'SET-USER-DATA':\r\n      return { ...state, ...action.payload, isAuth: action.payload.isAuth };\r\n    case 'GET_CAPTCHA_URL_SUCCESS':\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// actionCreator\r\nexport const setAuthUserDataAC = (id: string | undefined, email: string | null, login: string | null, isAuth: boolean) => ({\r\n  type: 'SET-USER-DATA',\r\n  payload: {\r\n    id, email, login, isAuth,\r\n  },\r\n} as const);\r\n\r\nexport const getCaptchaUrlSuccessAC = (captchaUrl: string) => ({\r\n  type: 'GET_CAPTCHA_URL_SUCCESS', payload: { captchaUrl },\r\n} as const);\r\n\r\n// thunk\r\nexport const getAuthUserDataThunk = () => async (dispatch: Dispatch) => {\r\n  try {\r\n    dispatch(progressAC(false));\r\n    const response = await authApi.me();\r\n    if (response.data.resultCode === RESPONSEFIGURES.zeroRequest) {\r\n      const { id, email, login } = response.data.data;\r\n      dispatch(setAuthUserDataAC(id, email, login, true));\r\n      dispatch(initializeSuccessAC(true));\r\n    }\r\n    const number = 1;\r\n    if (response.data.resultCode === number) {\r\n      dispatch(initializeSuccessAC(true));\r\n      ErrorFunc(response.data.messages[0], dispatch);\r\n    }\r\n  } catch (error) {\r\n    dispatch(initializeSuccessAC(true));\r\n    if (error instanceof Error) {\r\n      const { name } = error;\r\n      ErrorFunc(name, dispatch);\r\n    }\r\n  } finally {\r\n    dispatch(progressAC(true));\r\n  }\r\n};\r\n\r\nexport const getCaptchaUrlTC = () => async (dispatch: Dispatch) => {\r\n  try {\r\n    const response = await securityApi.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccessAC(captchaUrl));\r\n  } catch (error) {\r\n    if (error instanceof Error) {\r\n      const { name } = error;\r\n      ErrorFunc(name, dispatch);\r\n    }\r\n  }\r\n};\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\r\n  try {\r\n    const response = await authApi.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === RESPONSEFIGURES.zeroRequest) {\r\n      await dispatch(getAuthUserDataThunk());\r\n    } else if (response.data.resultCode === RESPONSEFIGURES.tenRequest) {\r\n      await dispatch(getCaptchaUrlTC());\r\n    } else {\r\n      const minNumber = 0;\r\n      const message = response.data.messages.length > minNumber ? response.data.messages[0] : 'Some error';\r\n      dispatch(stopSubmit('login', { _error: message }));\r\n    }\r\n  } catch (error) {\r\n    if (error instanceof Error) {\r\n      const { name } = error;\r\n      ErrorFunc(name, dispatch);\r\n    }\r\n  }\r\n};\r\n\r\nexport const logoutTC = () => async (dispatch: Dispatch) => {\r\n  try {\r\n    const response = await authApi.logout();\r\n    if (response.data.resultCode === RESPONSEFIGURES.zeroRequest) {\r\n      dispatch(setAuthUserDataAC(undefined, null, null, false));\r\n      dispatch(initializeSuccessAC(true));\r\n    }\r\n  } catch (error) {\r\n    if (error instanceof Error) {\r\n      const { name } = error;\r\n      ErrorFunc(name, dispatch);\r\n    }\r\n  }\r\n};\r\n\r\n","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport s from './Header.module.css';\n\nimport logoutIcon from 'assets/images/logout.svg';\nimport usersIcons from 'assets/images/users.png';\nimport { useAppSelector } from 'common/hook/selectorHook';\nimport { PATH } from 'enums/patch';\nimport { logoutTC } from 'redux/reducer/auth-reducer';\nimport { selectIsAuth, selectProfile } from 'redux/reducer/selectors';\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n\n  const { isAuth } = useAppSelector(selectIsAuth);\n  const { profile } = useAppSelector(selectProfile);\n\n  const logoutHandler = () => {\n    dispatch(logoutTC());\n  };\n\n  return (\n    <header className={s.header}>\n      <div className='maxContainer'>\n        <div className={s.wrapper}>\n          <div>\n            <span className={s.headerLogoText}>It-incubator</span>\n          </div>\n          <div className={s.loginBlock}>\n\n            {isAuth\n              ? <div className={s.headerNavigateBox}>\n                <img className={s.avatar} src={profile?.photos.small || usersIcons}\n                     alt='avatar' />\n                <button type='submit' className={s.btn} onClick={logoutHandler}>\n                  <span className={s.text}>Log out</span>\n                  <img className={s.logout} src={logoutIcon} alt='logoutIcon' />\n                </button>\n              </div>\n              : <NavLink className={s.login} to={PATH.LOGIN}>Login</NavLink>}\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import { FC } from 'react';\n\nimport { Field, WrappedFieldProps } from 'redux-form';\n\nimport styles from './FormControls.module.css';\n\nexport type FieldValidatorType = (value: string) => string | undefined\n\nexport const FormControl = ({ input, meta, child, ...props }: any) => {\n  const hasError = meta.touched && meta.error;\n  return (\n    <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\n      <div>\n        {props.children}\n      </div>\n      {hasError && <span>{meta.error}</span>}\n    </div>\n  );\n};\n\nexport const Textarea = (props: any) => {\n  const { input, meta, child, ...restProps } = props;\n  return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>;\n};\n\n// @ts-ignore\nexport const Input = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return <FormControl {...props}><input {...input} {...restProps} /></FormControl>;\n};\n\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\n                                                         name: FormKeysType,\n                                                         validators: Array<FieldValidatorType>,\n                                                         component: FC<WrappedFieldProps>,\n                                                         props = {}, text = '') {\n  return <div>\n    <Field placeholder={placeholder} name={name}\n           validate={validators}\n           component={component}\n           {...props}\n    /> {text}\n  </div>;\n}\n\nexport type GetStringKeys<T> = Extract<keyof T, string>","export const required = (value: any) => {\n    if (value) return undefined;\n\n    return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength: number) => (value: any) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","import React, { FC } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\n\nimport s from './style.module.css';\n\nimport { createField, GetStringKeys, Input } from 'common/FromControls/FormControls';\nimport { useAppSelector } from 'common/hook/selectorHook';\nimport { PATH } from 'enums/patch';\nimport { loginTC } from 'redux/reducer/auth-reducer';\nimport { selectIsAuth } from 'redux/reducer/selectors';\nimport { required } from 'utils/validators';\n\n// type\ntype LoginFormOwnProps = {\n  captchaUrl: string | null\n}\n\nexport type LoginFormValuesType = {\n  login: string,\n  password: string,\n  rememberMe: boolean,\n  captcha: string\n}\nexport const LoginForm: FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> = (props: any) => {\n\n  const {\n    error,\n    captchaUrl,\n    handleSubmit,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        {/* {createField<LoginFormValuesTypeKeys>('Login', 'login', [required], Input)} */}\n        <Field\n          validate={[required]}\n          component={Input}\n          className={s.input}\n          name='login'\n          placeholder='Login'\n        />\n      </div>\n      <div>\n        <Field\n          validate={[required]}\n          component={Input}\n          className={s.input}\n          name='password'\n          placeholder='Password'\n          type='password'\n        />\n      </div>\n\n      <label className={s.label}>\n        remember me\n        <Field\n          component={Input}\n          className={s.inputCheckbox}\n          name='rememberMe'\n          type='checkbox'\n        />\n      </label>\n\n      {captchaUrl && <img src={captchaUrl} alt='captchaUrl' />}\n      {captchaUrl && createField<LoginFormValuesTypeKeys>('Symbols from image', 'captcha', [required], Input, {})}\n      {error && <div style={{ color: 'red' }}>\n        {error}\n      </div>\n      }\n      <div>\n        <button className='btn' type='submit'>Login</button>\n      </div>\n    </form>\n\n  );\n};\n\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({ form: 'login' })(LoginForm);\n\ntype LoginFormValuesTypeKeys = GetStringKeys<LoginFormValuesType>\n\nexport const Login = () => {\n  const { isAuth, captchaUrl } = useAppSelector(selectIsAuth);\n  const dispatch = useDispatch();\n  const onSubmit = (formData: LoginFormValuesType) => {\n    dispatch(loginTC(formData.login, formData.password, formData.rememberMe, formData.captcha));\n  };\n\n  if (isAuth) {\n    return <Navigate to={PATH.ME} />;\n  }\n\n  return (\n    <div className={s.loginWrapper}>\n      <div className={s.box}>\n        <h3 className={s.subTitle}>To log in get registered <a className={s.link}\n                                                               href='https://social-network.samuraijs.com/login'>here</a> or\n          use common test account credentials:</h3>\n        <p className={s.text}>\n          Email:\n          {/* <span className={s.decor}>  free@samuraijs.com</span> */}\n          <span className={s.decor}>  bogdankozlovski18@gmail.com</span>\n        </p>\n        <p className={s.text}>\n          Password:\n          <span className={s.decor}> bogdan04.06</span>\n        </p>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\n      </div>\n\n    </div>\n  );\n};","export default __webpack_public_path__ + \"static/media/likeActive.652cec0c.svg\";","export default __webpack_public_path__ + \"static/media/likeNoActive.9895b6a3.svg\";","export default __webpack_public_path__ + \"static/media/post.f6af492a.svg\";","import { instance } from 'api/config';\r\nimport { ResponseType } from 'api/type';\r\nimport { PhotosPropsType, ProfileType } from 'redux/reducer/profile-reducer';\r\n\r\nexport const profileApi = {\r\n  getProfile(userId: number) {\r\n    return instance.get<ProfileType>(`profile/${userId}`);\r\n  },\r\n  getStatus(userId: number) {\r\n    return instance.get(`profile/status/${userId}`);\r\n  },\r\n  updateStatus(status: string) {\r\n    return instance.put<ResponseType>('profile/status', { status });\r\n  },\r\n  savePhoto(photoFile: string) {\r\n    const formData = new FormData();\r\n    formData.append('image', photoFile);\r\n    return instance.put<ResponseType<{ photos: PhotosPropsType }>>('/profile/photo', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n  saveProfile(profile: ProfileType) {\r\n    return instance.put<ResponseType>(`profile`, profile);\r\n  },\r\n};","import { AnyAction, Dispatch } from 'redux';\nimport { stopSubmit } from 'redux-form';\nimport { ThunkAction } from 'redux-thunk';\nimport { v1 } from 'uuid';\n\nimport { profileApi } from 'api/profile/index';\nimport { ErrorFunc } from 'common/hook/selectorHook';\nimport { RESPONSEFIGURES } from 'enums/patch';\nimport { progressAC } from 'redux/reducer/app-reducer';\nimport { AppStateType } from 'redux/store';\n\n// type\nexport type ContactsPropsType = {\n  github: string\n  vk: string\n  facebook: string\n  instagram: string\n  twitter: string\n  website: string\n  youtube: string\n  mainLink: string\n}\nexport type PhotosPropsType = { large: string, small: string }\nexport type ProfileType = {\n  aboutMe: string\n  userId: number\n  lookingForAJob: boolean\n  lookingForAJobDescription: string\n  fullName: string\n  contacts: ContactsPropsType\n  photos: PhotosPropsType\n}\n\nexport type RouteType = {\n  likesCount: number\n  message: string\n  id: string\n}\nexport type initialType = {\n  posts: Array<RouteType>\n  profile: ProfileType | null\n  status: string\n}\ntype GlobalReducerType =\n  | ReturnType<typeof addPostAC>\n  | ReturnType<typeof setUserProfileAC>\n  | ReturnType<typeof setStatusAC>\n  | ReturnType<typeof counterAC>\n\ntype ThunkActionType = ThunkAction<void, AppStateType, unknown, AnyAction>\n\n// initialState\nconst initialState: initialType = {\n  posts: [\n    { id: v1(), message: 'Hi,how are you', likesCount: 0 },\n    { id: v1(), message: 'Hi, you', likesCount: 1 },\n    { id: v1(), message: 'Hi,how are you', likesCount: 0 },\n    { id: v1(), message: 'how are you', likesCount: 0 },\n  ],\n  profile: null,\n  status: '',\n};\n//\n// reduce\nexport const profileReducer = (state: initialType = initialState, action: GlobalReducerType): initialType => {\n  switch (action.type) {\n    case 'ADD-POST':\n      return {\n        ...state,\n        posts: [...state.posts, { id: v1(), message: action.newPostBody, likesCount: 0 }],\n      };\n    case 'SET-USER-PROFILE':\n      return { ...state, profile: action.profile };\n    case 'SET-STATUS':\n      return { ...state, status: action.status };\n    case 'COUNTER': {\n      return {\n        ...state,\n        posts: [...state.posts.map(e => e.id === action.id ? { ...e, likesCount: action.likesCount } : e)],\n      };\n    }\n    default:\n      return state;\n  }\n};\n// action Creator\nexport const addPostAC = (newPostBody: string) => ({ type: 'ADD-POST', newPostBody } as const);\nexport const counterAC = (id: string, likesCount: number) => ({ type: 'COUNTER', id, likesCount } as const);\nexport const setUserProfileAC = (profile: ProfileType) => ({ type: 'SET-USER-PROFILE', profile } as const);\nexport const setStatusAC = (status: string) => ({ type: 'SET-STATUS', status } as const);\nexport const savePhotoSuccessAC = (photos: any) => ({\n  type: 'SAVE-PHOTO-SUCCESS',\n  photos,\n} as const);\n// thunk\nexport const getUserProfileTC = (userId: any) => async (dispatch: Dispatch) => {\n  try {\n    dispatch(progressAC(true));\n    const response = await profileApi.getProfile(userId);\n    dispatch(setUserProfileAC(response.data));\n  } catch (error) {\n    if (error instanceof Error) {\n      const { name } = error;\n      ErrorFunc(name, dispatch);\n    }\n  } finally {\n    dispatch(progressAC(true));\n  }\n};\nexport const getStatusTC = (userId: number) => async (dispatch: Dispatch) => {\n  try {\n    dispatch(progressAC(false));\n    const response = await profileApi.getStatus(userId);\n    dispatch(setStatusAC(response.data));\n  } catch (error) {\n    if (error instanceof Error) {\n      const { name } = error;\n      ErrorFunc(name, dispatch);\n    }\n  } finally {\n    dispatch(progressAC(true));\n  }\n\n};\nexport const updateStatusTC = (status: string) => async (dispatch: Dispatch) => {\n  try {\n    dispatch(progressAC(false));\n    const response = await profileApi.updateStatus(status);\n    if (response.data.resultCode === RESPONSEFIGURES.zeroRequest) {\n      dispatch(setStatusAC(status));\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      const { name } = error;\n      ErrorFunc(name, dispatch);\n    }\n  } finally {\n    dispatch(progressAC(true));\n  }\n\n};\n\n// export const savePhotoTC = (file: any) => async (dispatch: Dispatch) => {\nexport const savePhotoTC = (file: any): ThunkActionType => async (dispatch) => {\n  try {\n    dispatch(progressAC(false));\n    const response = await profileApi.savePhoto(file);\n    if (response.data.resultCode === RESPONSEFIGURES.zeroRequest) {\n      await dispatch(getUserProfileTC('22141'));\n      dispatch(savePhotoSuccessAC(response.data.data.photos));\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      const { name } = error;\n      ErrorFunc(name, dispatch);\n    }\n  } finally {\n    dispatch(progressAC(true));\n  }\n\n};\n\nexport const saveProfileTC = (profile: ProfileType) => async (dispatch: Dispatch, getState: () => AppStateType) => {\n  try {\n    dispatch(progressAC(false));\n    const userId = getState().auth.id;\n    const response = await profileApi.saveProfile(profile);\n    // const response = await profile.saveProfile(profile);\n\n    if (response.data.resultCode === RESPONSEFIGURES.zeroRequest) {\n      // @ts-ignore\n      dispatch(getUserProfileTC(userId));\n    } else {\n      dispatch(stopSubmit('edit-profile', { _error: response.data.messages[0] }));\n      return Promise.reject(response.data.messages[0]);\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      const { name } = error;\n      ErrorFunc(name, dispatch);\n    }\n  } finally {\n    dispatch(progressAC(true));\n  }\n\n};\n\n","import React, { FC } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport s from './Post.module.css';\n\nimport likesActive from 'assets/images/likeActive.svg';\nimport likes from 'assets/images/likeNoActive.svg';\nimport postIcons from 'assets/images/post.svg';\nimport { counterAC } from 'redux/reducer/profile-reducer';\n\n// type\ntype PostPropsType = {\n  message: string | undefined\n  likesCount: number\n  id: string\n}\n\nexport const Post: FC<PostPropsType> = (props) => {\n  const dispatch = useDispatch();\n  const {\n    message,\n    likesCount,\n    id,\n  } = props;\n\n  const counter = () => {\n    dispatch(counterAC(id, likesCount + 1));\n  };\n  return (\n    <div>\n      <div className={s.item}>\n        <div>\n          <img className={s.icons} src={postIcons} alt='logo' />\n          <span>{message}</span>\n        </div>\n\n        <div>\n          {likesCount > 0\n            ? <img onClick={counter} className={s.likesIcon} src={likesActive}\n                   alt='likes' />\n            : <img onClick={counter} className={s.likesIcon} src={likes}\n                   alt='likesActive' />\n          }\n          <span>{likesCount}</span>\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { memo } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Field, InjectedFormProps, reduxForm, reset } from 'redux-form';\n\nimport s from './MyPosts.module.css';\n\nimport { Textarea } from 'common/FromControls/FormControls';\nimport { useAppSelector } from 'common/hook/selectorHook';\nimport { Post } from 'components/Profile/MyPosts/Post/Post';\nimport { addPostAC } from 'redux/reducer/profile-reducer';\nimport { selectProfile } from 'redux/reducer/selectors';\nimport { maxLengthCreator, required } from 'utils/validators';\n\ntype AddPostFormType = {\n  newPostBody: string\n}\n\nexport const MyPosts = memo(() => {\n  const dispatch = useDispatch();\n  const { posts } = useAppSelector(selectProfile);\n\n  const post = posts.map(({ id, message, likesCount }) => (\n    <div key={`${id}${likesCount}`}>\n      <Post message={message} likesCount={likesCount} id={id} />\n    </div>));\n\n  const addNewPost = (values: AddPostFormType) => {\n    dispatch(addPostAC(values.newPostBody));\n    dispatch(reset('postAddForm'));\n  };\n\n  return (\n    <div className={s.myPosts}>\n      <h3 className={s.subtitle}>My Posts</h3>\n      <div>\n        <AddPostFormRedux onSubmit={addNewPost} />\n      </div>\n      <div className={s.posts}>\n        {post}\n      </div>\n    </div>\n  );\n});\n\nconst maxLength10 = maxLengthCreator(10);\nconst AddPostForm: React.FC<InjectedFormProps<AddPostFormType>> = (props) => (\n  <form onSubmit={props.handleSubmit}>\n    <Field\n      validate={[required, maxLength10]}\n      component={Textarea}\n      className='textArea'\n      name='newPostBody'\n      placeholder='Enter your post'\n    />\n    <div className={s.boxBtn}>\n      <button className='btn'>Add post</button>\n    </div>\n  </form>\n);\n\nconst AddPostFormRedux = reduxForm<AddPostFormType>({ form: 'postAddForm' })(AddPostForm);","import {FC} from \"react\";\n\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\n\nimport {createField, GetStringKeys, Input, Textarea} from \"common/FromControls/FormControls\";\nimport {initialType, ProfileType} from \"redux/reducer/profile-reducer\";\n\ntype PropsType = {\n    profile: ProfileType\n}\ntype ProfileTypeKeys = GetStringKeys<ProfileType>\n\nconst ProfileDataForm: FC<InjectedFormProps<initialType, PropsType> & PropsType> = (\n    {handleSubmit, profile, error}) => (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <button>save</button>\n            </div>\n            {error && <div>\n                {error}\n            </div>\n            }\n            <div>\n                <b>Full name</b>: {(createField<ProfileTypeKeys>(\"Full name\", \"fullName\", [], Input))}\n            </div>\n            <div>\n                <b>Looking for a\n                    job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\n            </div>\n\n            <div>\n                <b>My professional skills</b>:\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\n            </div>\n\n            <div>\n                <b>About me</b>:\n                {createField(\"About me\", \"aboutMe\", [], Textarea)}\n            </div>\n            <div>\n                <b>Contacts</b>: {Object.keys(profile?.contacts).map(key => <div key={key}>\n                    <b>{key}: {createField(key, `contacts.${  key}`, [], Input)}</b>\n                </div>)}\n            </div>\n        </form>\n    )\n\n// @ts-ignore\nexport const ProfileDataFormReduxForm = reduxForm<ProfilePropsType, PropsType>({form: 'edit-profile'})(ProfileDataForm)\n\n","export default __webpack_public_path__ + \"static/media/pencil.0312b8be.svg\";","import {ChangeEvent, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {updateStatusTC} from \"../../../redux/reducer/profile-reducer\";\r\nimport pencil from '../../../assets/images/pencil.svg'\r\nimport s from './ProfileInfo.module.css'\r\n\r\ntype PropsType = {\r\n    status: string\r\n    userId: string | undefined\r\n    myId: string | undefined\r\n}\r\n\r\nexport const ProfileStatus = (props: PropsType) => {\r\n\r\n    const {status, userId, myId} = props\r\n\r\n\r\n    console.log(status)\r\n    return (\r\n        <div>\r\n            {userId === myId\r\n                ? <ProfileStatusEditMode status={status}/>\r\n                : <span>{status || 'not status'}</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\ntype ProfileStatusEditModeType = {\r\n    status: string\r\n}\r\nconst ProfileStatusEditMode = (props: ProfileStatusEditModeType) => {\r\n    const {status} = props\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [value, setValue] = useState<string>(status)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        dispatch(updateStatusTC(value))\r\n        setEditMode(false)\r\n    }\r\n    const activeEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    return (\r\n        <div>\r\n            {editMode\r\n                ? <input\r\n                    className={s.statusInput}\r\n                    onChange={onStatusChange}\r\n                    onBlur={deactivateEditMode}\r\n                    autoFocus type=\"text\"\r\n                    placeholder={'change profile status'}\r\n                    value={value}\r\n                />\r\n                : <div onDoubleClick={activeEditMode} className={s.statusBox}>\r\n                    <b>status:</b>\r\n                    <span>{status || 'изменить статус профиля'}</span>\r\n                    <img className={s.pencilDecor} src={pencil} alt=\"pencil\"/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\n","import { ChangeEvent, useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport s from './ProfileInfo.module.css';\n\nimport usersIcons from 'assets/images/users.png';\nimport { useAppSelector } from 'common/hook/selectorHook';\nimport { Preloader } from 'common/preloader/Preloader';\nimport { ProfileDataFormReduxForm } from 'components/Profile/ProfileInfo/ProfileDataForm';\nimport { ProfileStatus } from 'components/Profile/ProfileInfo/ProfileStatus';\nimport { ProfileType, savePhotoTC, saveProfileTC } from 'redux/reducer/profile-reducer';\nimport { selectIsAuth, selectProfile } from 'redux/reducer/selectors';\n\ntype propsType = {\n  profile: ProfileType | null\n  status: string\n  userId: string | undefined\n}\nexport const ProfileInfo = ({ profile, status, userId }: propsType) => {\n  const dispatch = useDispatch();\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const photo = useAppSelector(selectProfile).profile?.photos.large;\n  const { id } = useAppSelector(selectIsAuth);\n\n  if (!profile) {\n    return <Preloader />;\n  }\n  const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.files && e.currentTarget.files.length) {\n      dispatch(savePhotoTC(e.currentTarget.files[0]));\n    }\n  };\n\n  const onSubmit = (formData: ProfileType) => {\n    dispatch(saveProfileTC(formData));\n    setEditMode(false);\n  };\n\n  return (\n    <div className={s.wrapper}>\n      <div className={s.changeAvatarBox}>\n        {/* <img className={s.images} src={profile.photos.large || usersIcons} alt='img' /> */}\n        <img className={s.images} src={photo || usersIcons} alt='img' />\n        {id === userId &&\n          <label className={s.label}>\n            change avatar\n            <input className={s.inputFile} type='file' onChange={onMainPhotoSelected} />\n          </label>\n        }\n      </div>\n\n      <div className={s.dataChangesBox}>\n        <h2 className={s.title}>User information:</h2>\n        <ProfileStatus status={status} myId={id} userId={userId} />\n        {editMode\n          ? <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\n          : <ProfileData profile={profile} goToEditMode={() => setEditMode(true)} />}\n\n        {id === userId &&\n          <button className={s.edit} onClick={() => setEditMode(!editMode)}>Edit information ✎</button>}\n      </div>\n    </div>\n  );\n};\n\ntype ProfileDataPropsType = {\n  profile: ProfileType\n  goToEditMode: () => void\n}\n\n// const ProfileData = ({profile, goToEditMode}: ProfileDataPropsType) => {\nconst ProfileData = ({ profile, goToEditMode }: any) => (\n  <table>\n    <tbody className={s.tbody}>\n    <tr>\n      <td>Full name:</td>\n      <td>{profile.fullName}</td>\n    </tr>\n    <tr>\n      <td>About me:</td>\n      <td>{profile.aboutMe}</td>\n    </tr>\n    <tr>\n      <td>Looking for a job:</td>\n      <td>{profile.lookingForAJob ? 'yes' : 'not'}</td>\n    </tr>\n\n    {profile.lookingForAJob &&\n      <div>\n        <b>My professional skills</b>:{profile.lookingForAJob}\n      </div>\n    }\n\n    <b>Contacts</b>: {\n      Object\n        .keys(profile.contacts)\n        .map((key) => <div key={key}>\n          {\n            profile.contacts[key] !== null\n            &&\n            <Contact contactTitle={key} contactValue={profile.contacts[key as keyof ContactsType]} />\n          }\n\n        </div>)}\n    </tbody>\n\n  </table>\n);\n\nconst Contact = ({ contactTitle, contactValue }: ContactsPropsType) => <table>\n  <tbody>\n  <tr>\n    <td>{contactTitle}:</td>\n    <td>{contactValue}</td>\n  </tr>\n  </tbody>\n\n</table>;\n\nexport type ContactsType = {\n  github: string\n  vk: string\n  facebook: string\n  instagram: string\n  twitter: string\n  website: string\n  youtube: string\n  mainLink: string\n}\n\ntype ContactsPropsType = {\n  contactTitle: string\n  contactValue: string\n}\n\n","import React, { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { useAppSelector } from 'common/hook/selectorHook';\nimport { MyPosts } from 'components/Profile/MyPosts/MyPosts';\nimport { ProfileInfo } from 'components/Profile/ProfileInfo/ProfileInfo';\nimport { PATH } from 'enums/patch';\nimport { getStatusTC, getUserProfileTC } from 'redux/reducer/profile-reducer';\nimport { selectIsAuth, selectProfile } from 'redux/reducer/selectors';\n\nexport const Me = () => {\n  const dispatch = useDispatch();\n\n  const { id, isAuth } = useAppSelector(selectIsAuth);\n  const { profile, status } = useAppSelector(selectProfile);\n  const photo = useAppSelector(selectProfile).profile?.photos.small;\n  // const foto = profile?.photos.large;\n\n  useEffect(() => {\n    if (id) {\n      dispatch(getUserProfileTC(Number(id)));\n      dispatch(getStatusTC(Number(id)));\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   dispatch(getUserProfileTC(Number(id)));\n  // }, [photo]);\n\n  if (!isAuth) return <Navigate to={PATH.LOGIN} />;\n  return (\n    <div style={{ width: '100%' }}>\n      <ProfileInfo\n        profile={profile}\n        status={status}\n        userId={id}\n      />\n      <MyPosts />\n    </div>\n  );\n};\n\n","import React from 'react';\n\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nimport s from './navigation.module.scss';\n\nimport { PATH } from 'enums/patch';\n\nexport const Navigation = () => (\n  <div>\n    <ul className={cn(s.navigation__items, s.navigation)}>\n      <li className={s.navigation__item}>\n        <NavLink\n          className={({ isActive }) => `${s.navigation__link} ${isActive ? s.navigation__active : ''}`}\n          to={PATH.ME}>\n          Me\n        </NavLink>\n      </li>\n      <li className={s.navigation__item}>\n        <NavLink\n          className={({ isActive }) => `${s.navigation__link} ${isActive ? s.navigation__active : ''}`}\n          to={PATH.DIALOGS}>\n          Messages\n        </NavLink>\n      </li>\n\n      <li className={s.navigation__item}>\n        <NavLink\n          className={({ isActive }) => `${s.navigation__link} ${isActive ? s.navigation__active : ''}`}\n          to={PATH.USERS}>\n          Users\n        </NavLink>\n      </li>\n    </ul>\n  </div>\n);","import React, { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Navigate, useParams } from 'react-router-dom';\n\nimport { useAppSelector } from 'common/hook/selectorHook';\nimport { ProfileInfo } from 'components/Profile/ProfileInfo/ProfileInfo';\nimport { PATH } from 'enums/patch';\nimport { getStatusTC, getUserProfileTC } from 'redux/reducer/profile-reducer';\nimport { selectIsAuth, selectProfile } from 'redux/reducer/selectors';\n\nexport const Profile = () => {\n  const dispatch = useDispatch();\n  const { profile, status } = useAppSelector(selectProfile);\n  const { isAuth } = useAppSelector(selectIsAuth);\n  const { userId } = useParams<{ userId: string | undefined }>();\n\n  useEffect(() => {\n    if (userId) {\n      dispatch(getUserProfileTC(Number(userId)));\n      dispatch(getStatusTC(Number(userId)));\n    }\n  }, [userId, dispatch]);\n\n  if (!isAuth) return <Navigate to={PATH.LOGIN} />;\n  return (\n    <div style={{ width: '100%' }}>\n      <ProfileInfo\n        profile={profile}\n        status={status}\n        userId={userId}\n      />\n    </div>\n  );\n};\n\n","export default __webpack_public_path__ + \"static/media/leftArrow.1bc5754e.svg\";","export default __webpack_public_path__ + \"static/media/rightArrow.0684657e.svg\";","import React, { useState } from 'react';\n\nimport s from './paginator.module.css';\n\nimport leftArrow from 'assets/images/leftArrow.svg';\nimport rightArrow from 'assets/images/rightArrow.svg';\n\ntype propsType = {\n  pageSize: number\n  currentPage: number\n  totalUsersCount: number\n  onPageChanged: (pageNumber: number) => void\n  // eslint-disable-next-line react/require-default-props\n  portionSize?: number\n}\nconst Paginator = ({ ...props }: propsType) => {\n  const {\n    pageSize,\n    totalUsersCount,\n    currentPage,\n    onPageChanged,\n    portionSize = 10,\n  } = props;\n\n  const pagesCount = Math.ceil(totalUsersCount / pageSize);\n  const portionCount = Math.ceil(pagesCount / portionSize);\n  const [portionNumber, setPortionNumber] = useState(1);\n  const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  const rightPortionPageNumber = portionNumber * portionSize;\n\n  const pages = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  return <div className={s.wrapperPaginator}>\n    {portionNumber > 1 &&\n      <button className={s.btn} onClick={() => {\n        setPortionNumber(portionNumber - 1);\n      }}>\n        <img className={s.arrow} src={leftArrow} alt='leftArrow' />\n      </button>}\n\n    {pages\n      .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n      .map((p) => <span\n        className={`${s.span} ${currentPage === p ? s.active : ''}`}\n        key={p}\n        onClick={(e) => {\n          onPageChanged(p);\n        }}>{p}</span>)}\n    {portionCount > portionNumber &&\n      <button className={s.btn} onClick={() => {\n        setPortionNumber(portionNumber + 1);\n      }}>\n        <img className={s.arrow} src={rightArrow} alt='rightArrow' />\n      </button>}\n\n  </div>;\n};\n\nexport default Paginator;","import { instance } from 'api/config';\nimport { getUserType, ResponseType } from 'api/type';\n\nexport const usersAPI = {\n  getUsers(currentPage: number, pageSize: number) {\n    return instance.get<getUserType>(`users?page=${currentPage}&count=${pageSize}`)\n      .then(response => response.data);\n  },\n  unfollow(userId: number) {\n    return instance.delete<ResponseType>(`follow/${userId}`);\n  },\n  follow(userId: number) {\n    return instance.post<ResponseType>(`follow/${userId}`);\n  },\n};","import { Dispatch } from 'redux';\n\nimport { usersAPI } from 'api/user/index';\nimport { RESPONSEFIGURES } from 'enums/patch';\nimport { progressAC } from 'redux/reducer/app-reducer';\n\n// type\nexport type UserType = {\n  id: number\n  photos: {\n    large: null | string\n    small: null | string\n  }\n  followed: boolean\n  name: string\n  status: string\n}\n\nexport type UsersType = {\n  users: Array<UserType>\n  pageSize: number\n  totalUsersCount: number\n  currentPage: number\n  isFetching: boolean\n  followingInProgress: number[]\n}\nconst initialState: UsersType = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: [],\n};\ntype GlobalReducerType =\n  | ReturnType<typeof followAC>\n  | ReturnType<typeof unfollowAC>\n  | ReturnType<typeof setUsersAC>\n  | ReturnType<typeof setCurrentPageAC>\n  | ReturnType<typeof setUsersTotalCountAC>\n  | ReturnType<typeof toggleIsFetchingAC>\n  | ReturnType<typeof toggleIsFollowingProgressAC>\n\n// reducer\nexport const usersReducer = (state: UsersType = initialState, action: GlobalReducerType): UsersType => {\n  switch (action.type) {\n    case 'FOLLOW':\n      return { ...state, users: state.users.map(u => u.id === action.userId ? { ...u, followed: true } : u) };\n    case 'UNFOLLOW':\n      return { ...state, users: state.users.map(u => u.id === action.userId ? { ...u, followed: false } : u) };\n    case 'SET-USER':\n      return { ...state, users: [...action.users] };\n    case 'SET-CURRENT-PAGE':\n      return { ...state, currentPage: action.currentPage };\n    case 'SET-USERS-TOTAL-COUNT':\n      return { ...state, totalUsersCount: action.totalCount };\n    case 'TOGGLE-IS-FETCHING':\n      return { ...state, isFetching: action.isFetching };\n    case 'TOGGLE-IS-FOLLOWING-PROGRESS':\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter(id => id !== action.userId),\n      };\n    default:\n      return state;\n  }\n};\n\n// actionCreator\nexport const followAC = (userId: number) => ({ type: 'FOLLOW', userId } as const);\nexport const unfollowAC = (userId: number) => ({ type: 'UNFOLLOW', userId } as const);\nexport const setUsersAC = (users: Array<UserType>) => ({ type: 'SET-USER', users } as const);\nexport const setCurrentPageAC = (currentPage: number) => ({ type: 'SET-CURRENT-PAGE', currentPage } as const);\nexport const setUsersTotalCountAC = (totalCount: number) => ({ type: 'SET-USERS-TOTAL-COUNT', totalCount } as const);\nexport const toggleIsFetchingAC = (isFetching: boolean) => ({ type: 'TOGGLE-IS-FETCHING', isFetching } as const);\nexport const toggleIsFollowingProgressAC = (isFetching: boolean, userId: any) =>\n  ({ type: 'TOGGLE-IS-FOLLOWING-PROGRESS', isFetching, userId } as const);\n\n// thunk\nexport const getUsersTC = (currentPage: number, pageSize: number) => async (dispatch: Dispatch) => {\n  try {\n    dispatch(progressAC(false));\n    dispatch(toggleIsFetchingAC(true));\n    dispatch(setCurrentPageAC(currentPage));\n    const data = await usersAPI.getUsers(currentPage, pageSize);\n    dispatch(setUsersAC(data.items));\n    dispatch(setUsersTotalCountAC(data.totalCount));\n  } finally {\n    dispatch(progressAC(true));\n    dispatch(toggleIsFetchingAC(false));\n  }\n\n};\n\nconst followUnfollowFlow = async (dispatch: Dispatch, userId: number, apiMethod: any, actionCreator: any) => {\n  dispatch(toggleIsFollowingProgressAC(true, userId));\n  const response = await apiMethod(userId);\n  if (response.data.resultCode === RESPONSEFIGURES.zeroRequest) {\n    dispatch(actionCreator(userId));\n  }\n  dispatch(toggleIsFollowingProgressAC(false, userId));\n};\n\nexport const followTC = (userId: number) => async (dispatch: Dispatch) => {\n  await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followAC);\n};\nexport const unfollowTC = (userId: number) => async (dispatch: Dispatch) => {\n  await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowAC);\n};","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport s from './users.module.css';\n\nimport usersIcons from 'assets/images/users.png';\nimport { PATH } from 'enums/patch';\nimport { followTC, unfollowTC, UserType } from 'redux/reducer/users-reducer';\n\ntype propsType = {\n  user: UserType\n  followingInProgress: number[]\n}\nexport const User = ({ ...props }: propsType) => {\n  const dispatch = useDispatch();\n  const {\n    user,\n    followingInProgress,\n  } = props;\n\n  const onHandlerUnfollow = (id: number) => {\n    dispatch(unfollowTC(id));\n  };\n\n  const onHandlerFollow = (id: number) => {\n    dispatch(followTC(id));\n  };\n\n  return (\n    <div className={s.wrapper}>\n      <div>\n        <div>\n          <NavLink to={`${PATH.PROFILE}/${user.id}`}>\n            <img\n              src={user.photos.small != null ? user.photos.small : usersIcons}\n              className={s.userPhoto}\n              alt='usePhoto'\n            />\n          </NavLink>\n        </div>\n\n      </div>\n      <div>\n        <div>\n          <div className={s.name}>Name: <span className={s.nameSpan}>{user.name}</span></div>\n          <span className={s.status}>{user.status ? user.status : 'no status'}</span>\n          {user.followed\n            ? <button className={s.btn}\n                      disabled={followingInProgress.some(id => id === user.id)}\n                      onClick={() => onHandlerUnfollow(user.id)}>\n              Unfollow\n            </button>\n            : <button className={s.btn} disabled={followingInProgress.some(id => id === user.id)}\n                      onClick={() => onHandlerFollow(user.id)}>\n              Follow\n            </button>\n          }\n        </div>\n      </div>\n    </div>);\n};\n\n","import React, { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport s from './users.module.css';\n\nimport { useAppSelector } from 'common/hook/selectorHook';\nimport Paginator from 'common/Paginator/Paginator';\nimport { User } from 'components/Users/User';\nimport { PATH } from 'enums/patch';\nimport { selectIsAuth, selectUsers } from 'redux/reducer/selectors';\nimport { getUsersTC } from 'redux/reducer/users-reducer';\n\nexport const Users = () => {\n  const dispatch = useDispatch();\n\n  const {\n    users,\n    pageSize,\n    totalUsersCount,\n    currentPage,\n    followingInProgress,\n    // isFetching,\n  } = useAppSelector(selectUsers);\n  const { isAuth } = useAppSelector(selectIsAuth);\n  const onPageChanged = (pageNumber: number) => {\n    dispatch(getUsersTC(pageNumber, pageSize));\n  };\n\n  useEffect(() => {\n    dispatch(getUsersTC(currentPage, pageSize));\n  }, []);\n\n  if (!isAuth) {\n    return <Navigate to={PATH.LOGIN} />;\n  }\n  return <div className={s.wrapperUsers}>\n    {/* {isFetching && <img className={s.loader} src={loading} alt=\"loading\"/>} */}\n\n    <Paginator\n      currentPage={currentPage}\n      onPageChanged={onPageChanged}\n      totalUsersCount={totalUsersCount}\n      pageSize={pageSize}\n    />\n\n    <div className={s.boxUser}>\n      {\n        users.map(u => (\n            <User key={u.id}\n                  user={u}\n                  followingInProgress={followingInProgress}\n            />\n          ),\n        )\n      }\n    </div>\n  </div>;\n};\n\n","import React, { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\n\nimport { Error } from './common/Error/Error';\nimport { useAppSelector } from './common/hook/selectorHook';\nimport { Preloader } from './common/preloader/Preloader';\nimport { Dialogs } from './components/Dialogs/Dialogs';\nimport { Header } from './components/Header/Header';\nimport { Login } from './components/Login/Login';\nimport { Me } from './components/Me/Me';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { Profile } from './components/Profile/Profile';\nimport { Users } from './components/Users/Users';\nimport { PATH } from './enums/patch';\nimport { getAuthUserDataThunk } from './redux/reducer/auth-reducer';\nimport { selectError, selectInitialized } from './redux/reducer/selectors';\n\nexport const App = () => {\n\n  const dispatch = useDispatch();\n  const error = useAppSelector(selectError);\n  const { progress, initialized } = useAppSelector(selectInitialized);\n\n  useEffect(() => {\n\n    dispatch(getAuthUserDataThunk());\n  }, []);\n\n  if (!initialized) {\n    return <Preloader />;\n  }\n\n  return (\n    <>\n      <Header />\n      {error && <Error />}\n      {!progress && <div className='nav'>\n        <div className='statusBar' />\n      </div>}\n      <div className='app-wrapper'>\n        <Navigation />\n        <Routes>\n          <Route path={PATH.ME} element={<Me />} />\n          <Route path={`${PATH.PROFILE}/:userId`} element={<Profile />} />\n          <Route path={PATH.DIALOGS} element={<Dialogs />} />\n          <Route path={PATH.USERS} element={<Users />} />\n          <Route path={PATH.LOGIN} element={<Login />} />\n          <Route path={'/*'} element={<div>error</div>} />\n        </Routes>\n      </div>\n    </>\n  );\n};\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducer as formReducer } from 'redux-form';\nimport thunk from 'redux-thunk';\n\nimport { appReducer } from './reducer/app-reducer';\nimport { authReducer } from './reducer/auth-reducer';\nimport { dialogsReducer } from './reducer/dialogs-reducer';\nimport { profileReducer } from './reducer/profile-reducer';\nimport { usersReducer } from './reducer/users-reducer';\n\nconst reducers = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  form: formReducer,\n  app: appReducer,\n});\nexport type AppStateType = ReturnType<typeof reducers>\n\nexport const store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n// export const store = createStore(reducers, applyMiddleware(thunk));\n","import React from 'react';\n\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperPaginator\":\"paginator_wrapperPaginator__11cPR\",\"arrow\":\"paginator_arrow__3hN6X\",\"btn\":\"paginator_btn__1x78D\",\"active\":\"paginator_active__1lzh6\",\"span\":\"paginator_span__1Hryq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__3FNzr\",\"block\":\"Dialogs_block__Jw7X4\",\"item\":\"Dialogs_item__2eDoH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1V9iv\",\"posts\":\"MyPosts_posts__2Iz8x\",\"subtitle\":\"MyPosts_subtitle__1j497\",\"boxBtn\":\"MyPosts_boxBtn__ZY5gB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3-Ewb\",\"icons\":\"Post_icons__3WArY\",\"likesIcon\":\"Post_likesIcon__2BwZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"error_wrapper__1maBr\",\"block\":\"error_block__3xg_Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"style_img__2HQOT\",\"box\":\"style_box__2noti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__vKn3r\",\"error\":\"FormControls_error__3U5re\"};"],"sourceRoot":""}