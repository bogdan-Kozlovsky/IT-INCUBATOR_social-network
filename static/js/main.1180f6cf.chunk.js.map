{"version":3,"sources":["components/Me/Me.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Login/style.module.css","components/Header/Header.module.css","components/Users/Users.module.css","enums/patch.ts","redux/selectors/errorMessage/index.ts","types/useAppSelector.ts","common/ModalErrorMessage/ModalErrorMessage.tsx","assets/images/loader.gif","common/preloader/Preloader.tsx","redux/selectors/auth/index.ts","redux/selectors/dialogs/index.ts","components/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","redux/actionCreator/dialogs/actionCreator.ts","assets/images/logout.svg","assets/images/users.png","api/config/index.ts","api/auth/index.ts","redux/actionCreator/app/actionCreators.tsx","utils/errorProcessing.ts","redux/actionCreator/auth/actionCreators.ts","redux/selectors/profile/index.ts","components/Header/LogoutNavigate/LogoutNavigate.tsx","redux/middlewares/auth/logoutTC.ts","components/Header/Header.tsx","redux/middlewares/auth/getAuthUserDataTC.ts","api/security/index.ts","common/FromControls/FormControls.tsx","utils/validators.ts","components/Login/Login.tsx","redux/middlewares/auth/loginTC.ts","redux/middlewares/auth/getCaptchaUrlTC.ts","api/profile/index.ts","redux/actionCreator/profile/actionCreator.ts","redux/middlewares/profile/getStatusTC.ts","redux/middlewares/profile/getUserProfileTC.ts","assets/images/likeActive.svg","assets/images/likeNoActive.svg","assets/images/post.svg","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Contact/Contact.tsx","components/Profile/ProfileData/ProfileData.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","assets/images/pencil.svg","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusEditMode/ProfileStatusEditMode.tsx","redux/middlewares/profile/updateStatusTC.ts","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/middlewares/profile/savePhotoTC.ts","redux/middlewares/profile/saveProfileTC.ts","components/Me/Me.tsx","components/Navigation/Navigation.tsx","components/Profile/Profile.tsx","api/user/index.ts","redux/actionCreator/users/actionCreator.ts","redux/middlewares/users/getUsersTC.ts","redux/selectors/users/index.ts","assets/images/leftArrow.svg","assets/images/rightArrow.svg","common/Paginator/Paginator.tsx","redux/middlewares/users/followUnfollowFlowTC.ts","components/Users/User/User.tsx","redux/middlewares/users/unfollowTC.ts","redux/middlewares/users/followTC.ts","components/Users/Users.tsx","redux/selectors/app/index.ts","App.tsx","redux/reducer/app/app-reducer.tsx","redux/reducer/auth/auth-reducer.ts","redux/reducer/dialogs/dialogs-reducer.ts","redux/reducer/profile/profile-reducer.ts","redux/reducer/user/users-reducer.ts","redux/store.ts","index.tsx","components/Navigation/navigation.module.scss","common/Paginator/paginator.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","common/ModalErrorMessage/error.module.css","common/preloader/style.module.css","common/FromControls/FormControls.module.css"],"names":["module","exports","PATH","RESPONSE_NUMBER","selectErrorMessage","state","app","errorMessage","useAppSelector","useSelector","ModalErrorMessage","className","style","wrapper","block","Preloader","s","box","img","src","loading","alt","selectIsAuth","auth","isAuth","selectCaptchaUrl","captchaUrl","selectIdAuth","id","selectDialogs","dialogsPage","dialogs","selectMessage","messages","AddMessageFormRedux","reduxForm","form","handleSubmit","onSubmit","Field","component","name","placeholder","type","Dialogs","dispatch","useDispatch","dialogsElement","map","item","messageElement","message","dialogsItems","values","newMessageBody","reset","to","LOGIN","instance","axios","create","baseURL","process","withCredentials","headers","authApi","get","email","password","rememberMe","captcha","post","delete","initializeSuccessAC","value","progressAC","errorAC","errorProcessing","error","setTimeout","setAuthUserDataAC","login","payload","getCaptchaUrlSuccessAC","selectProfile","profilePage","profile","selectPhotoLarge","photos","large","selectPost","posts","selectStatus","status","LogoutNavigate","profileData","headerNavigateBox","avatar","small","usersIcons","btn","onClick","a","data","resultCode","COMPLETED_SUCCESSFULLY_NUMBER","undefined","Error","text","logout","logoutIcon","Header","header","headerLogoText","loginBlock","getAuthUserDataTC","response","securityApi","FormControl","input","meta","props","child","hasError","touched","styles","formControl","children","Textarea","restProps","Input","createField","validators","validate","maxLength","required","LoginReduxForm","label","inputCheckbox","color","Login","ME","loginWrapper","subTitle","link","href","decor","formData","REDIRECT_TO_CAPTCHA","url","length","stopSubmit","_error","profileApi","userId","put","photoFile","FormData","append","setStatusAC","getStatusTC","getUserProfileTC","Post","likesCount","counter","counterAC","icons","postIcons","likesIcon","likesActive","likes","MyPosts","memo","myPosts","subtitle","AddPostFormRedux","newPostBody","maxLength10","boxBtn","Contact","contactTitle","contactValue","ProfileData","aboutMe","fullName","lookingForAJob","contacts","tbody","Object","keys","key","ProfileDataFormReduxForm","ProfileStatusEditMode","useState","isEditMode","setIsEditMode","setValue","statusInput","onChange","e","currentTarget","onBlur","updateStatusTC","autoFocus","onDoubleClick","statusBox","pencilDecor","pencil","ProfileStatus","myId","ProfileInfo","photo","changeAvatarBox","images","inputFile","file","files","dataChangesBox","title","initialValues","getState","Promise","reject","saveProfileTC","goToEditMode","edit","Me","idAuth","useEffect","Number","Navigation","isActiveClass","isActive","navigation__link","navigation__active","cn","navigation__items","navigation","navigation__item","DIALOGS","USERS","Profile","useParams","usersAPI","getUsers","currentPage","pageSize","then","unfollow","follow","followAC","unfollowAC","setCurrentPageAC","toggleIsFetchingAC","isFetching","toggleIsFollowingProgressAC","getUsersTC","users","items","totalCount","selectUsers","usersPage","selectPageSize","selectTotalUsersCount","totalUsersCount","selectCurrentPage","selectFollowingInProgress","followingInProgress","Paginator","onPageChanged","portionSize","portionNumber","setPortionNumber","pagesCount","Math","ceil","portionCount","leftPortionPageNumber","rightPortionPageNumber","pages","i","push","wrapperPaginator","arrow","leftArrow","filter","p","span","active","rightArrow","followUnfollowFlowTC","apiMethod","actionCreator","User","user","onUnfollowUserClick","bind","onFollowUserClick","PROFILE","userPhoto","nameSpan","followed","disabled","some","Users","wrapperUsers","pageNumber","boxUser","u","selectIsProgress","isProgress","selectIsInitialized","isInitialized","App","path","element","initialState","v1","reducers","combineReducers","action","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1180f6cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Me_wrapper__2yQyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__2o7DY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__5RQK7\",\"images\":\"ProfileInfo_images__2ZQ9B\",\"wrapper\":\"ProfileInfo_wrapper__ar6Hn\",\"label\":\"ProfileInfo_label__2k_Nw\",\"changeAvatarBox\":\"ProfileInfo_changeAvatarBox__2IZTw\",\"inputFile\":\"ProfileInfo_inputFile__2MHjY\",\"dataChangesBox\":\"ProfileInfo_dataChangesBox__1v_m_\",\"title\":\"ProfileInfo_title__3LiCi\",\"pencilDecor\":\"ProfileInfo_pencilDecor__2pCnK\",\"statusBox\":\"ProfileInfo_statusBox__1evDX\",\"statusInput\":\"ProfileInfo_statusInput__2ecQD\",\"edit\":\"ProfileInfo_edit__3RPCH\",\"tbody\":\"ProfileInfo_tbody__cjvlY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"style_loginWrapper__N9tP0\",\"box\":\"style_box__3bekn\",\"subTitle\":\"style_subTitle__3q87b\",\"link\":\"style_link__32jd_\",\"text\":\"style_text__nIWJu\",\"decor\":\"style_decor__2CYM6\",\"input\":\"style_input__2QUrT\",\"label\":\"style_label__3fuOR\",\"inputCheckbox\":\"style_inputCheckbox__24xM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3q43m\",\"wrapper\":\"Header_wrapper__qew8b\",\"btn\":\"Header_btn__hO9Xg\",\"logout\":\"Header_logout__3j1kR\",\"text\":\"Header_text__XHZIG\",\"avatar\":\"Header_avatar__2lwXB\",\"headerLogoText\":\"Header_headerLogoText__3kfQF\",\"headerNavigateBox\":\"Header_headerNavigateBox__1LA3O\",\"login\":\"Header_login__2quml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperUsers\":\"Users_wrapperUsers__3FPDj\",\"boxUser\":\"Users_boxUser__vz2I-\",\"wrapper\":\"Users_wrapper__3IL7r\",\"userPhoto\":\"Users_userPhoto__2z-9s\",\"name\":\"Users_name__k9L-S\",\"status\":\"Users_status__m3_3E\",\"nameSpan\":\"Users_nameSpan__2dqmU\",\"btn\":\"Users_btn__1fxC8\",\"loader\":\"Users_loader__nlK0R\"};","export enum PATH {\r\n  ME = '/',\r\n  PROFILE = '/profile',\r\n  DIALOGS = '/dialogs',\r\n  USERS = '/users',\r\n  LOGIN = '/login',\r\n  PAGE_NOT_FOUND = '404',\r\n}\r\n\r\nexport enum RESPONSE_NUMBER {\r\n  COMPLETED_SUCCESSFULLY_NUMBER = 0,\r\n  REDIRECT_TO_CAPTCHA = 10\r\n}","import { AppStateType } from '../../store';\r\n\r\nexport const selectErrorMessage = (state: AppStateType): string | null => state.app.errorMessage;","import { TypedUseSelectorHook, useSelector } from 'react-redux';\n\nimport { AppStateType } from '../redux/store';\n\nexport const useAppSelector: TypedUseSelectorHook<AppStateType> = useSelector;","import React from 'react';\n\nimport { selectErrorMessage } from '../../redux/selectors/errorMessage';\n\nimport style from './error.module.css';\n\nimport { useAppSelector } from 'types/useAppSelector';\n\nexport const ModalErrorMessage = () => {\n\n  const errorMessage = useAppSelector(selectErrorMessage);\n\n  return (\n    <div className={style.wrapper}>\n      <div className={style.block}>\n        {errorMessage}\n      </div>\n    </div>\n  );\n};\n\n","export default __webpack_public_path__ + \"static/media/loader.65c3f468.gif\";","import React from 'react';\n\nimport s from './style.module.css';\n\nimport loading from 'assets/images/loader.gif';\n\nexport const Preloader = () => (\n  <div className={s.box}>\n\n    <img className={s.img} src={loading} alt='loading' />\n\n  </div>\n);\n","import { AppStateType } from '../../store';\r\n\r\nexport const selectIsAuth = (state: AppStateType): boolean => state.auth.isAuth;\r\nexport const selectCaptchaUrl = (state: AppStateType): string | null => state.auth.captchaUrl;\r\nexport const selectIdAuth = (state: AppStateType): string | undefined => state.auth.id;","import { DialogType, PostsType } from '../../reducer/dialogs/types';\r\nimport { AppStateType } from '../../store';\r\n\r\nexport const selectDialogs = (state: AppStateType): PostsType[] => state.dialogsPage.dialogs;\r\nexport const selectMessage = (state: AppStateType): DialogType[] => state.dialogsPage.messages;\r\n\r\n","import React from 'react';\n\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\n\nimport { AddMessageFormType } from '../Dialogs/types';\n\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormType>> = ({ handleSubmit }) => (\n  <form onSubmit={handleSubmit}>\n    <Field\n      component='textarea'\n      name='newMessageBody'\n      className='textArea'\n      placeholder='Enter your message'\n    />\n    <div>\n      <button type='submit' className='btn'>Add message</button>\n    </div>\n  </form>\n);\nexport const AddMessageFormRedux = reduxForm<AddMessageFormType>({ form: 'dialogAddMessageForm' })(AddMessageForm);","import React from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { reset } from 'redux-form';\r\n\r\nimport { sendMessageAC } from '../../redux/actionCreator/dialogs/actionCreator';\r\nimport { DialogType, PostsType } from '../../redux/reducer/dialogs/types';\r\nimport { selectIsAuth } from '../../redux/selectors/auth';\r\nimport { selectDialogs, selectMessage } from '../../redux/selectors/dialogs';\r\n\r\nimport s from './Dialogs.module.css';\r\nimport { AddMessageFormType } from './types';\r\n\r\nimport { AddMessageFormRedux } from 'components/AddMessageForm/AddMessageForm';\r\nimport { PATH } from 'enums/patch';\r\nimport { useAppSelector } from 'types/useAppSelector';\r\n\r\nexport const Dialogs = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const dialogs = useAppSelector(selectDialogs);\r\n  const messages = useAppSelector(selectMessage);\r\n  const isAuth = useAppSelector(selectIsAuth);\r\n\r\n  const dialogsElement = dialogs.map(({ id, name }: PostsType) => (<div className={s.item} key={id}>{name}</div>));\r\n  const messageElement = messages.map(({ id, message }: DialogType) => (\r\n    <div className={s.item} key={id}>{message}</div>));\r\n\r\n  const addNewMessage = (values: AddMessageFormType) => {\r\n    dispatch(sendMessageAC(values.newMessageBody));\r\n    dispatch(reset('dialogAddMessageForm'));\r\n  };\r\n\r\n  if (!isAuth) {\r\n    return <Navigate to={PATH.LOGIN} />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <div className={s.block}>\r\n        <div className={s.dialogsItems}>\r\n          {dialogsElement}\r\n        </div>\r\n        <div className={s.messages}>\r\n          {messageElement}\r\n        </div>\r\n      </div>\r\n\r\n      <AddMessageFormRedux onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\n","export const sendMessageAC = (newMessageBody: string) => ({ type: 'SEND-MESSAGE', newMessageBody } as const);","export default __webpack_public_path__ + \"static/media/logout.1bf8fe5c.svg\";","export default __webpack_public_path__ + \"static/media/users.998e6aeb.png\";","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n  withCredentials: true,\r\n  headers: {\r\n    'API-KEY': 'edbb6621-0047-4274-8a4c-f1d2a1bf4727',\r\n  },\r\n});","import { instance } from 'api/config';\nimport { AuthMeResponseType, ResponseType } from 'api/types';\n\nexport const authApi = {\n  me() {\n    return instance.get<ResponseType<AuthMeResponseType>>('auth/me');\n  },\n\n  login(email: string, password: string, rememberMe: boolean, captcha: string) {\n    return instance.post<ResponseType<AuthMeResponseType>>(`auth/login`, {\n      email,\n      password,\n      rememberMe,\n      captcha,\n    });\n  },\n\n  logout() {\n    return instance.delete<ResponseType>(`/auth/login`);\n  },\n};","export const initializeSuccessAC = (value: boolean) => ({\r\n  type: 'INITIALIZED-SUCCESS', value,\r\n} as const);\r\n\r\nexport const progressAC = (value: boolean) => ({\r\n  type: 'PROGRESS', value,\r\n} as const);\r\n\r\nexport const errorAC = (value: any) => ({\r\n  type: 'APP-ERROR', value,\r\n} as const);","import { Dispatch } from 'redux';\n\nimport { errorAC } from '../redux/actionCreator/app/actionCreators';\n\nconst DELAY = 5000;\n\nexport const errorProcessing = (error: string, dispatch: Dispatch) => {\n  if (error) {\n\n    dispatch(errorAC(error));\n\n    setTimeout(() => {\n      dispatch(errorAC(null));\n    }, DELAY);\n  }\n};\n\n","export const setAuthUserDataAC = (id: string | undefined, email: string | null, login: string | null, isAuth: boolean) => ({\r\n  type: 'SET-USER-DATA',\r\n  payload: {\r\n    id, email, login, isAuth,\r\n  },\r\n} as const);\r\n\r\nexport const getCaptchaUrlSuccessAC = (captchaUrl: string) => ({\r\n  type: 'GET_CAPTCHA_URL_SUCCESS', payload: { captchaUrl },\r\n} as const);","import { ProfileType, RouteType } from '../../reducer/profile/types';\r\nimport { AppStateType } from '../../store';\r\n\r\nexport const selectProfile = (state: AppStateType): ProfileType | null => state.profilePage.profile;\r\nexport const selectPhotoLarge = (state: AppStateType) => state.profilePage.profile?.photos.large;\r\nexport const selectPost = (state: AppStateType): RouteType[] => state.profilePage.posts;\r\nexport const selectStatus = (state: AppStateType): string => state.profilePage.status;","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport logoutIcon from '../../../assets/images/logout.svg';\nimport usersIcons from '../../../assets/images/users.png';\nimport { logoutTC } from '../../../redux/middlewares/auth/logoutTC';\nimport { selectProfile } from '../../../redux/selectors/profile';\nimport { useAppSelector } from '../../../types/useAppSelector';\nimport s from '../Header.module.css';\n\nexport const LogoutNavigate = () => {\n\n  const dispatch = useDispatch();\n\n  const profileData = useAppSelector(selectProfile);\n\n  const onLogoutClick = () => {\n    dispatch(logoutTC());\n  };\n\n  return (\n    <div className={s.headerNavigateBox}>\n      <img className={s.avatar} src={profileData?.photos.small || usersIcons}\n           alt='avatar' />\n      <button type='submit' className={s.btn} onClick={onLogoutClick}>\n        <span className={s.text}>Log out</span>\n        <img className={s.logout} src={logoutIcon} alt='logoutIcon' />\n      </button>\n    </div>\n  );\n};\n\n","import { Dispatch } from 'redux';\n\nimport { authApi } from '../../../api/auth';\nimport { RESPONSE_NUMBER } from '../../../enums/patch';\nimport { errorProcessing } from '../../../utils/errorProcessing';\nimport { initializeSuccessAC } from '../../actionCreator/app/actionCreators';\nimport { setAuthUserDataAC } from '../../actionCreator/auth/actionCreators';\n\nexport const logoutTC = () => async (dispatch: Dispatch) => {\n  try {\n    const response = await authApi.logout();\n    if (response.data.resultCode === RESPONSE_NUMBER.COMPLETED_SUCCESSFULLY_NUMBER) {\n      dispatch(setAuthUserDataAC(undefined, null, null, false));\n      dispatch(initializeSuccessAC(true));\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      const { name } = error;\n      errorProcessing(name, dispatch);\n    }\n  }\n};","import React from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport { selectIsAuth } from '../../redux/selectors/auth';\n\nimport s from './Header.module.css';\nimport { LogoutNavigate } from './LogoutNavigate/LogoutNavigate';\n\nimport { PATH } from 'enums/patch';\nimport { useAppSelector } from 'types/useAppSelector';\n\nexport const Header = () => {\n\n  const isAuth = useAppSelector(selectIsAuth);\n\n  return (\n    <header className={s.header}>\n      <div className='maxContainer'>\n        <div className={s.wrapper}>\n          <div>\n            <span className={s.headerLogoText}>It-incubator</span>\n          </div>\n          <div className={s.loginBlock}>\n\n            {isAuth\n\n              ? <LogoutNavigate />\n\n              : <NavLink className={s.login} to={PATH.LOGIN}>Login</NavLink>}\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import { Dispatch } from 'redux';\n\nimport { authApi } from '../../../api/auth';\nimport { RESPONSE_NUMBER } from '../../../enums/patch';\nimport { errorProcessing } from '../../../utils/errorProcessing';\nimport { initializeSuccessAC, progressAC } from '../../actionCreator/app/actionCreators';\nimport { setAuthUserDataAC } from '../../actionCreator/auth/actionCreators';\n\nexport const getAuthUserDataTC = () => async (dispatch: Dispatch) => {\n  try {\n    dispatch(progressAC(false));\n    const response = await authApi.me();\n    if (response.data.resultCode === RESPONSE_NUMBER.COMPLETED_SUCCESSFULLY_NUMBER) {\n      const { id, email, login } = response.data.data;\n      dispatch(setAuthUserDataAC(id, email, login, true));\n      dispatch(initializeSuccessAC(true));\n    }\n    const number = 1;\n    if (response.data.resultCode === number) {\n      dispatch(initializeSuccessAC(true));\n      errorProcessing(response.data.messages[0], dispatch);\n    }\n  } catch (error) {\n    dispatch(initializeSuccessAC(true));\n    if (error instanceof Error) {\n      const { name } = error;\n      errorProcessing(name, dispatch);\n    }\n  } finally {\n    dispatch(progressAC(true));\n  }\n};","import { instance } from 'api/config';\r\n\r\nexport const securityApi = {\r\n  getCaptchaUrl() {\r\n    return instance.get<{ url: string }>(`security/get-captcha-url`);\r\n  },\r\n};","import { FC } from 'react';\n\nimport { Field, WrappedFieldProps } from 'redux-form';\n\nimport styles from './FormControls.module.css';\n\nexport type FieldValidatorType = (value: string) => string | undefined\n\nexport const FormControl = ({ input, meta, child, ...props }: any) => {\n  const hasError = meta.touched && meta.error;\n  return (\n    <div className={`${styles.formControl} ${hasError ? styles.error : ''}`}>\n      <div>\n        {props.children}\n      </div>\n      {hasError && <span>{meta.error}</span>}\n    </div>\n  );\n};\n\nexport const Textarea = (props: any) => {\n  const { input, meta, child, ...restProps } = props;\n  return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>;\n};\n\n// @ts-ignore\nexport const Input = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return <FormControl {...props}><input {...input} {...restProps} /></FormControl>;\n};\n\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\n                                                         name: FormKeysType,\n                                                         validators: Array<FieldValidatorType>,\n                                                         component: FC<WrappedFieldProps>,\n                                                         props = {}, text = '') {\n  return <div>\n    <Field placeholder={placeholder} name={name}\n           validate={validators}\n           component={component}\n           {...props}\n    /> {text}\n  </div>;\n}\n\nexport type GetStringKeys<T> = Extract<keyof T, string>","export const required = (value: any) => {\n  if (value) return undefined;\n\n  return 'Field is required';\n};\n\nexport const maxLengthValue = (maxLength: number) => (value: any) => {\n  if (value.length > maxLength) {\n    return `Max length is ${maxLength} symbols`;\n  }\n\n  return undefined;\n};","import React, { FC } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\n\nimport { loginTC } from '../../redux/middlewares/auth/loginTC';\nimport { selectCaptchaUrl, selectIsAuth } from '../../redux/selectors/auth';\n\nimport s from './style.module.css';\nimport { LoginFormOwnProps } from './types';\n\nimport { createField, GetStringKeys, Input } from 'common/FromControls/FormControls';\nimport { PATH } from 'enums/patch';\nimport { useAppSelector } from 'types/useAppSelector';\nimport { required } from 'utils/validators';\n\nexport type LoginFormValuesType = {\n  login: string,\n  password: string,\n  rememberMe: boolean,\n  captcha: string\n}\nexport const LoginForm: FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> = (props: any) => {\n\n  const {\n    error,\n    captchaUrl,\n    handleSubmit,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          validate={[required]}\n          component={Input}\n          className={s.input}\n          name='login'\n          placeholder='Login'\n        />\n      </div>\n      <div>\n        <Field\n          validate={[required]}\n          component={Input}\n          className={s.input}\n          name='password'\n          placeholder='Password'\n          type='password'\n        />\n      </div>\n\n      <label className={s.label}>\n        remember me\n        <Field\n          component={Input}\n          className={s.inputCheckbox}\n          name='rememberMe'\n          type='checkbox'\n        />\n      </label>\n\n      {captchaUrl && <img src={captchaUrl} alt='captchaUrl' />}\n      {captchaUrl && createField<LoginFormValuesTypeKeys>('Symbols from image', 'captcha', [required], Input, {})}\n      {error && <div style={{ color: 'red' }}>\n        {error}\n      </div>\n      }\n      <div>\n        <button className='btn' type='submit'>Login</button>\n      </div>\n    </form>\n\n  );\n};\n\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({ form: 'login' })(LoginForm);\n\ntype LoginFormValuesTypeKeys = GetStringKeys<LoginFormValuesType>\n\nexport const Login = () => {\n\n  const dispatch = useDispatch();\n\n  const isAuth = useAppSelector(selectIsAuth);\n  const captchaUrl = useAppSelector(selectCaptchaUrl);\n\n  const onSubmit = (formData: LoginFormValuesType) => {\n    dispatch(loginTC(formData.login, formData.password, formData.rememberMe, formData.captcha));\n  };\n\n  if (isAuth) {\n    return <Navigate to={PATH.ME} />;\n  }\n\n  return (\n    <div className={s.loginWrapper}>\n      <div className={s.box}>\n        <h3 className={s.subTitle}>To log in get registered\n          <a className={s.link} href='https://social-network.samuraijs.com/login'>here</a> or\n          use common test account credentials:</h3>\n        <p className={s.text}>\n          Email:\n          <span className={s.decor}><span>bogdankozlovski18@gmail.com</span></span>\n        </p>\n        <p className={s.text}>\n          Password:\n          <span className={s.decor}><span>socialPassword</span></span>\n        </p>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\n      </div>\n\n    </div>\n  );\n};","import { stopSubmit } from 'redux-form';\n\nimport { authApi } from '../../../api/auth';\nimport { RESPONSE_NUMBER } from '../../../enums/patch';\nimport { ThunkType } from '../../../types/thunkType';\nimport { errorProcessing } from '../../../utils/errorProcessing';\n\nimport { getAuthUserDataTC } from './getAuthUserDataTC';\nimport { getCaptchaUrlTC } from './getCaptchaUrlTC';\n\nexport const loginTC = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\n  try {\n    const response = await authApi.login(email, password, rememberMe, captcha);\n\n    if (response.data.resultCode === RESPONSE_NUMBER.COMPLETED_SUCCESSFULLY_NUMBER) {\n      await dispatch(getAuthUserDataTC());\n    }\n    if (response.data.resultCode === RESPONSE_NUMBER.REDIRECT_TO_CAPTCHA) {\n      await dispatch(getCaptchaUrlTC());\n    }\n    const minNumber = 0;\n    const message = response.data.messages.length > minNumber ? response.data.messages[0] : 'Some error';\n    dispatch(stopSubmit('login', { _error: message }));\n  } catch (error) {\n    if (error instanceof Error) {\n      const { name } = error;\n      errorProcessing(name, dispatch);\n    }\n  }\n};","import { Dispatch } from 'redux';\n\nimport { securityApi } from '../../../api/security';\nimport { errorProcessing } from '../../../utils/errorProcessing';\nimport { getCaptchaUrlSuccessAC } from '../../actionCreator/auth/actionCreators';\n\nexport const getCaptchaUrlTC = () => async (dispatch: Dispatch) => {\n  try {\n    const response = await securityApi.getCaptchaUrl();\n    const captchaUrl = response.data.url;\n    dispatch(getCaptchaUrlSuccessAC(captchaUrl));\n  } catch (error) {\n    if (error instanceof Error) {\n      const { name } = error;\n      errorProcessing(name, dispatch);\n    }\n  }\n};\n","import { PhotosPropsType, ProfileType } from '../../redux/reducer/profile/types';\n\nimport { instance } from 'api/config';\nimport { ResponseType } from 'api/types';\n\nexport const profileApi = {\n  getProfile(userId: number) {\n    return instance.get<ProfileType>(`profile/${userId}`);\n  },\n\n  getStatus(userId: number) {\n    return instance.get(`profile/status/${userId}`);\n  },\n\n  updateStatusProfile(status: string) {\n    return instance.put<ResponseType>('profile/status', { status });\n  },\n\n  savePhotoProfile(photoFile: string) {\n    const formData = new FormData();\n\n    formData.append('image', photoFile);\n\n    return instance.put<ResponseType<{ photos: PhotosPropsType }>>('/profile/photo', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n  },\n\n  saveProfile(profile: ProfileType) {\n    return instance.put<ResponseType>(`profile`, profile);\n  },\n};","import { ProfileType } from '../../reducer/profile/types';\r\n\r\nexport const addPostAC = (newPostBody: string) =>\r\n  ({ type: 'ADD-POST', newPostBody } as const);\r\n\r\nexport const counterAC = (id: string, likesCount: number) =>\r\n  ({ type: 'COUNTER', id, likesCount } as const);\r\n\r\nexport const setUserProfileAC = (profile: ProfileType) =>\r\n  ({ type: 'SET-USER-PROFILE', profile } as const);\r\n\r\nexport const setStatusAC = (status: string) =>\r\n  ({ type: 'SET-STATUS', status } as const);\r\n\r\nexport const savePhotoSuccessAC = (photos: any) =>\r\n  ({ type: 'SAVE-PHOTO-SUCCESS', photos } as const);","import { Dispatch } from 'redux';\n\nimport { profileApi } from '../../../api/profile';\nimport { errorProcessing } from '../../../utils/errorProcessing';\nimport { progressAC } from '../../actionCreator/app/actionCreators';\nimport { setStatusAC } from '../../actionCreator/profile/actionCreator';\n\nexport const getStatusTC = (userId: number) => async (dispatch: Dispatch) => {\n  try {\n    dispatch(progressAC(false));\n    const response = await profileApi.getStatus(userId);\n    dispatch(setStatusAC(response.data));\n  } catch (error) {\n    if (error instanceof Error) {\n      const { name } = error;\n      errorProcessing(name, dispatch);\n    }\n  } finally {\n    dispatch(progressAC(true));\n  }\n};","import { Dispatch } from 'redux';\n\nimport { profileApi } from '../../../api/profile';\nimport { errorProcessing } from '../../../utils/errorProcessing';\nimport { progressAC } from '../../actionCreator/app/actionCreators';\nimport { setUserProfileAC } from '../../actionCreator/profile/actionCreator';\n\nexport const getUserProfileTC = (userId: any) => async (dispatch: Dispatch) => {\n  try {\n    dispatch(progressAC(true));\n    const response = await profileApi.getProfile(userId);\n    dispatch(setUserProfileAC(response.data));\n  } catch (error) {\n    if (error instanceof Error) {\n      const { name } = error;\n      errorProcessing(name, dispatch);\n    }\n  } finally {\n    dispatch(progressAC(true));\n  }\n};","export default __webpack_public_path__ + \"static/media/likeActive.652cec0c.svg\";","export default __webpack_public_path__ + \"static/media/likeNoActive.9895b6a3.svg\";","export default __webpack_public_path__ + \"static/media/post.f6af492a.svg\";","import React, { FC } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { counterAC } from '../../../../redux/actionCreator/profile/actionCreator';\n\nimport s from './Post.module.css';\n\nimport likesActive from 'assets/images/likeActive.svg';\nimport likes from 'assets/images/likeNoActive.svg';\nimport postIcons from 'assets/images/post.svg';\n\n// type\ntype PostPropsType = {\n  message: string | undefined\n  likesCount: number\n  id: string\n}\n\nexport const Post: FC<PostPropsType> = (props) => {\n  const dispatch = useDispatch();\n  const {\n    message,\n    likesCount,\n    id,\n  } = props;\n\n  const counter = () => {\n    dispatch(counterAC(id, likesCount + 1));\n  };\n  return (\n    <div>\n      <div className={s.item}>\n        <div>\n          <img className={s.icons} src={postIcons} alt='logo' />\n          <span>{message}</span>\n        </div>\n\n        <div>\n          {likesCount > 0\n            ? <img onClick={counter} className={s.likesIcon} src={likesActive}\n                   alt='likes' />\n            : <img onClick={counter} className={s.likesIcon} src={likes}\n                   alt='likesActive' />\n          }\n          <span>{likesCount}</span>\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { memo } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Field, InjectedFormProps, reduxForm, reset } from 'redux-form';\n\nimport { addPostAC } from '../../../redux/actionCreator/profile/actionCreator';\nimport { selectPost } from '../../../redux/selectors/profile';\n\nimport s from './MyPosts.module.css';\n\nimport { Textarea } from 'common/FromControls/FormControls';\nimport { Post } from 'components/Profile/MyPosts/Post/Post';\nimport { useAppSelector } from 'types/useAppSelector';\nimport { maxLengthValue, required } from 'utils/validators';\n\ntype AddPostFormType = {\n  newPostBody: string\n}\n\nexport const MyPosts = memo(() => {\n  const dispatch = useDispatch();\n  const posts = useAppSelector(selectPost);\n\n  const post = posts.map(({ id, message, likesCount }) => (\n    <div key={`${id}${likesCount}`}>\n      <Post message={message} likesCount={likesCount} id={id} />\n    </div>));\n\n  const addNewPost = (values: AddPostFormType) => {\n    dispatch(addPostAC(values.newPostBody));\n    dispatch(reset('postAddForm'));\n  };\n\n  return (\n    <div className={s.myPosts}>\n      <h3 className={s.subtitle}>My Posts</h3>\n      <div>\n        <AddPostFormRedux onSubmit={addNewPost} />\n      </div>\n      <div className={s.posts}>\n        {post}\n      </div>\n    </div>\n  );\n});\n\nconst maxLength10 = maxLengthValue(10);\nconst AddPostForm: React.FC<InjectedFormProps<AddPostFormType>> = (props) => (\n  <form onSubmit={props.handleSubmit}>\n    <Field\n      validate={[required, maxLength10]}\n      component={Textarea}\n      className='textArea'\n      name='newPostBody'\n      placeholder='Enter your post'\n    />\n    <div className={s.boxBtn}>\n      <button className='btn'>Add post</button>\n    </div>\n  </form>\n);\n\nconst AddPostFormRedux = reduxForm<AddPostFormType>({ form: 'postAddForm' })(AddPostForm);","import { ContactsPropsType } from './types';\r\n\r\nexport const Contact = ({ contactTitle, contactValue }: ContactsPropsType) => <table>\r\n  <tbody>\r\n  <tr>\r\n    <td>{contactTitle}:</td>\r\n    <td>{contactValue}</td>\r\n  </tr>\r\n  </tbody>\r\n\r\n</table>;","import { Contact } from '../Contact/Contact';\r\nimport { ContactsType } from '../Contact/types';\r\nimport s from '../ProfileInfo/ProfileInfo.module.css';\r\n\r\nexport const ProfileData = ({ profile }: any) => {\r\n\r\n  const { aboutMe, fullName, lookingForAJob, contacts } = profile;\r\n\r\n  return (\r\n    <table>\r\n      <tbody className={s.tbody}>\r\n      <tr>\r\n        <td>Full name:</td>\r\n        <td>{fullName}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>About me:</td>\r\n        <td>{aboutMe}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Looking for a job:</td>\r\n        <td>{lookingForAJob ? 'yes' : 'not'}</td>\r\n      </tr>\r\n\r\n      {profile.lookingForAJob &&\r\n        <div>\r\n          <b>My professional skills</b>:{profile.lookingForAJob}\r\n        </div>\r\n      }\r\n\r\n      <b>Contacts</b>: {\r\n        Object\r\n          .keys(contacts)\r\n          .map((key) => <div key={key}>\r\n            {\r\n              contacts[key] !== null\r\n              &&\r\n              <Contact contactTitle={key} contactValue={profile.contacts[key as keyof ContactsType]} />\r\n            }\r\n\r\n          </div>)}\r\n      </tbody>\r\n\r\n    </table>\r\n  );\r\n};","import { FC } from 'react';\n\nimport { InjectedFormProps, reduxForm } from 'redux-form';\n\nimport { InitialType, ProfileType } from '../../../redux/reducer/profile/types';\n\nimport { createField, GetStringKeys, Input, Textarea } from 'common/FromControls/FormControls';\n\ntype PropsType = {\n  profile: ProfileType\n}\n\ntype ProfileTypeKeys = GetStringKeys<ProfileType>\n\nconst ProfileDataForm: FC<InjectedFormProps<InitialType, PropsType> & PropsType> = (\n  { handleSubmit, profile, error }) => (\n  <form onSubmit={handleSubmit}>\n    <div>\n      <button>save</button>\n    </div>\n    {error && <div>\n      {error}\n    </div>\n    }\n    <div>\n      <b>Full name</b>: {(createField<ProfileTypeKeys>('Full name', 'fullName', [], Input))}\n    </div>\n    <div>\n      <b>Looking for a\n        job</b>: {createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\n    </div>\n\n    <div>\n      <b>My professional skills</b>:\n      {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\n    </div>\n\n    <div>\n      <b>About me</b>:\n      {createField('About me', 'aboutMe', [], Textarea)}\n    </div>\n    <div>\n      <b>Contacts</b>: {Object.keys(profile?.contacts).map(key => <div key={key}>\n      <b>{key}: {createField(key, `contacts.${key}`, [], Input)}</b>\n    </div>)}\n    </div>\n  </form>\n);\n\n// @ts-ignore\nexport const ProfileDataFormReduxForm = reduxForm<ProfilePropsType, PropsType>({ form: 'edit-profile' })(ProfileDataForm);\n\n","export default __webpack_public_path__ + \"static/media/pencil.0312b8be.svg\";","import { ChangeEvent, useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport pencil from '../../../../../assets/images/pencil.svg';\nimport { updateStatusTC } from '../../../../../redux/middlewares/profile/updateStatusTC';\nimport s from '../../ProfileInfo.module.css';\n\nimport { ProfileStatusEditModePropsType } from './types';\n\nexport const ProfileStatusEditMode = (props: ProfileStatusEditModePropsType) => {\n\n  const { status } = props;\n\n  const dispatch = useDispatch();\n\n  const [isEditMode, setIsEditMode] = useState<boolean>(false);\n  const [value, setValue] = useState<string>(status);\n\n  const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.currentTarget.value);\n  };\n\n  const onDeactivateEditModeBlur = () => {\n    dispatch(updateStatusTC(value));\n    setIsEditMode(false);\n  };\n\n  const onActiveEditModeClick = () => {\n    setIsEditMode(true);\n  };\n\n  return (\n    <div>\n      {isEditMode\n        ? <input\n          className={s.statusInput}\n          onChange={onStatusChange}\n          onBlur={onDeactivateEditModeBlur}\n          autoFocus\n          type='text'\n          placeholder='change profile status'\n          value={value}\n        />\n\n        : <div onDoubleClick={onActiveEditModeClick} className={s.statusBox}>\n          <b>status:</b>\n          <span>{status || 'изменить статус профиля'}</span>\n          <img className={s.pencilDecor} src={pencil} alt='pencil' />\n        </div>\n      }\n    </div>\n  );\n};","import { Dispatch } from 'redux';\n\nimport { profileApi } from '../../../api/profile';\nimport { RESPONSE_NUMBER } from '../../../enums/patch';\nimport { errorProcessing } from '../../../utils/errorProcessing';\nimport { progressAC } from '../../actionCreator/app/actionCreators';\nimport { setStatusAC } from '../../actionCreator/profile/actionCreator';\n\nexport const updateStatusTC = (status: string) => async (dispatch: Dispatch) => {\n  try {\n    dispatch(progressAC(false));\n    const response = await profileApi.updateStatusProfile(status);\n    if (response.data.resultCode === RESPONSE_NUMBER.COMPLETED_SUCCESSFULLY_NUMBER) {\n      dispatch(setStatusAC(status));\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      const { name } = error;\n      errorProcessing(name, dispatch);\n    }\n  } finally {\n    dispatch(progressAC(true));\n  }\n};","import { ProfileStatusEditMode } from './ProfileStatusEditMode/ProfileStatusEditMode';\nimport { ProfileStatusPropsType } from './types';\n\nexport const ProfileStatus = (props: ProfileStatusPropsType) => {\n\n  const { status, userId, myId } = props;\n\n  return (\n    <div>\n      {userId === myId\n        ? <ProfileStatusEditMode status={status} />\n        : <span>{status || 'not status'}</span>\n      }\n    </div>\n  );\n};\n\n","import { ChangeEvent, useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { savePhotoTC } from '../../../redux/middlewares/profile/savePhotoTC';\nimport { saveProfileTC } from '../../../redux/middlewares/profile/saveProfileTC';\nimport { ProfileType } from '../../../redux/reducer/profile/types';\nimport { selectIdAuth } from '../../../redux/selectors/auth';\nimport { selectPhotoLarge } from '../../../redux/selectors/profile';\nimport { ProfileData } from '../ProfileData/ProfileData';\nimport { ProfileInfoPropsType } from '../types';\n\nimport s from './ProfileInfo.module.css';\n\nimport usersIcons from 'assets/images/users.png';\nimport { Preloader } from 'common/preloader/Preloader';\nimport { ProfileDataFormReduxForm } from 'components/Profile/ProfileInfo/ProfileDataForm';\nimport { ProfileStatus } from 'components/Profile/ProfileInfo/ProfileStatus/ProfileStatus';\nimport { useAppSelector } from 'types/useAppSelector';\n\nexport const ProfileInfo = ({ profile, status, userId }: ProfileInfoPropsType) => {\n\n  const dispatch = useDispatch();\n\n  const [isEditMode, setIsEditMode] = useState<boolean>(false);\n\n  const photo = useAppSelector(selectPhotoLarge);\n  const id = useAppSelector(selectIdAuth);\n\n  const onPhotoFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.files && e.currentTarget.files.length) {\n      dispatch(savePhotoTC(e.currentTarget.files[0]));\n    }\n  };\n\n  const onSubmit = (formData: ProfileType) => {\n    dispatch(saveProfileTC(formData));\n    setIsEditMode(false);\n  };\n\n  const onChangeIsEditModeClick = () => {\n    setIsEditMode(!isEditMode);\n  };\n\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <div className={s.wrapper}>\n      <div className={s.changeAvatarBox}>\n        <img className={s.images} src={photo || usersIcons} alt='img' />\n\n        {id === userId &&\n          <label className={s.label}>\n            change avatar\n            <input className={s.inputFile} type='file' onChange={onPhotoFileChange} />\n          </label>\n        }\n\n      </div>\n\n      <div className={s.dataChangesBox}>\n        <h2 className={s.title}>User information:</h2>\n\n        <ProfileStatus status={status} myId={id} userId={userId} />\n\n        {isEditMode\n          ? <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\n          : <ProfileData profile={profile} goToEditMode={() => setIsEditMode(true)} />\n        }\n\n        {id === userId &&\n          <button className={s.edit} onClick={onChangeIsEditModeClick}>Edit information ✎</button>\n        }\n\n      </div>\n    </div>\n  );\n};\n","import { profileApi } from '../../../api/profile';\r\nimport { RESPONSE_NUMBER } from '../../../enums/patch';\r\nimport { errorProcessing } from '../../../utils/errorProcessing';\r\nimport { progressAC } from '../../actionCreator/app/actionCreators';\r\nimport { savePhotoSuccessAC } from '../../actionCreator/profile/actionCreator';\r\nimport { ThunkActionType } from '../thunkType';\r\n\r\nimport { getUserProfileTC } from './getUserProfileTC';\r\n\r\nexport const savePhotoTC = (file: any): ThunkActionType => async (dispatch) => {\r\n  try {\r\n    dispatch(progressAC(false));\r\n    const response = await profileApi.savePhotoProfile(file);\r\n    if (response.data.resultCode === RESPONSE_NUMBER.COMPLETED_SUCCESSFULLY_NUMBER) {\r\n      await dispatch(getUserProfileTC('22141'));\r\n      dispatch(savePhotoSuccessAC(response.data.data.photos));\r\n    }\r\n  } catch (error) {\r\n    if (error instanceof Error) {\r\n      const { name } = error;\r\n      errorProcessing(name, dispatch);\r\n    }\r\n  } finally {\r\n    dispatch(progressAC(true));\r\n  }\r\n};","import { Dispatch } from 'redux';\nimport { stopSubmit } from 'redux-form';\n\nimport { profileApi } from '../../../api/profile';\nimport { RESPONSE_NUMBER } from '../../../enums/patch';\nimport { errorProcessing } from '../../../utils/errorProcessing';\nimport { progressAC } from '../../actionCreator/app/actionCreators';\nimport { ProfileType } from '../../reducer/profile/types';\nimport { AppStateType } from '../../store';\n\nimport { getUserProfileTC } from './getUserProfileTC';\n\nexport const saveProfileTC = (profile: ProfileType) => async (dispatch: Dispatch, getState: () => AppStateType) => {\n  try {\n    dispatch(progressAC(false));\n    const userId = getState().auth.id;\n    const response = await profileApi.saveProfile(profile);\n    // const response = await profile.saveProfile(profile);\n\n    if (response.data.resultCode === RESPONSE_NUMBER.COMPLETED_SUCCESSFULLY_NUMBER) {\n      // @ts-ignore\n      dispatch(getUserProfileTC(userId));\n    } else {\n      dispatch(stopSubmit('edit-profile', { _error: response.data.messages[0] }));\n      return Promise.reject(response.data.messages[0]);\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      const { name } = error;\n      errorProcessing(name, dispatch);\n    }\n  } finally {\n    dispatch(progressAC(true));\n  }\n};","import React, { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { getStatusTC } from '../../redux/middlewares/profile/getStatusTC';\nimport { getUserProfileTC } from '../../redux/middlewares/profile/getUserProfileTC';\nimport { selectIdAuth, selectIsAuth } from '../../redux/selectors/auth';\nimport { selectProfile, selectStatus } from '../../redux/selectors/profile';\n\nimport s from 'components/Me/Me.module.css';\nimport { MyPosts } from 'components/Profile/MyPosts/MyPosts';\nimport { ProfileInfo } from 'components/Profile/ProfileInfo/ProfileInfo';\nimport { PATH } from 'enums/patch';\nimport { useAppSelector } from 'types/useAppSelector';\n\nexport const Me = () => {\n\n  const dispatch = useDispatch();\n\n  const isAuth = useAppSelector(selectIsAuth);\n  const idAuth = useAppSelector(selectIdAuth);\n  const status = useAppSelector(selectStatus);\n  const profile = useAppSelector(selectProfile);\n\n  useEffect(() => {\n    if (idAuth) {\n      dispatch(getUserProfileTC(Number(idAuth)));\n      dispatch(getStatusTC(Number(idAuth)));\n    }\n  }, []);\n\n  if (!isAuth) return <Navigate to={PATH.LOGIN} />;\n\n  return (\n    <div className={s.wrapper}>\n      <ProfileInfo\n        profile={profile}\n        status={status}\n        userId={idAuth}\n      />\n\n      <MyPosts />\n\n    </div>\n  );\n};\n\n","import React from 'react';\n\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nimport s from './navigation.module.scss';\n\nimport { PATH } from 'enums/patch';\n\nexport const Navigation = () => {\n\n  const isActiveClass = (isActive: boolean) => `${s.navigation__link} ${isActive ? s.navigation__active : ''}`;\n\n  return (\n    <div>\n      <ul className={cn(s.navigation__items, s.navigation)}>\n        <li className={s.navigation__item}>\n\n          <NavLink\n            className={({ isActive }) => isActiveClass(isActive)}\n            to={PATH.ME}>\n            Me\n          </NavLink>\n\n        </li>\n        <li className={s.navigation__item}>\n          <NavLink\n            className={({ isActive }) => isActiveClass(isActive)}\n            to={PATH.DIALOGS}>\n            Messages\n          </NavLink>\n\n        </li>\n        <li className={s.navigation__item}>\n\n          <NavLink\n            className={({ isActive }) => isActiveClass(isActive)}\n            to={PATH.USERS}>\n            Users\n          </NavLink>\n\n        </li>\n      </ul>\n    </div>\n  );\n};","import React, { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Navigate, useParams } from 'react-router-dom';\n\nimport { getStatusTC } from '../../redux/middlewares/profile/getStatusTC';\nimport { getUserProfileTC } from '../../redux/middlewares/profile/getUserProfileTC';\nimport { selectIsAuth } from '../../redux/selectors/auth';\nimport { selectProfile, selectStatus } from '../../redux/selectors/profile';\n\nimport s from 'components/Profile/Profile.module.css';\nimport { ProfileInfo } from 'components/Profile/ProfileInfo/ProfileInfo';\nimport { PATH } from 'enums/patch';\nimport { useAppSelector } from 'types/useAppSelector';\n\nexport const Profile = () => {\n\n  const dispatch = useDispatch();\n\n  const profile = useAppSelector(selectProfile);\n  const status = useAppSelector(selectStatus);\n  const isAuth = useAppSelector(selectIsAuth);\n\n  const { userId } = useParams<{ userId: string | undefined }>();\n\n  useEffect(() => {\n    if (userId) {\n      dispatch(getUserProfileTC(Number(userId)));\n      dispatch(getStatusTC(Number(userId)));\n    }\n  }, [userId, dispatch]);\n\n  if (!isAuth) {\n    return <Navigate to={PATH.LOGIN} />;\n  }\n\n  return (\n    <div className={s.wrapper}>\n      <ProfileInfo\n        profile={profile}\n        status={status}\n        userId={userId}\n      />\n    </div>\n  );\n};\n\n","import { instance } from 'api/config';\nimport { GetUserType, ResponseType } from 'api/types';\n\nexport const usersAPI = {\n\n  getUsers(currentPage: number, pageSize: number) {\n    return instance.get<GetUserType>(`users?page=${currentPage}&count=${pageSize}`)\n      .then(response => response.data);\n  },\n\n  unfollow(userId: number) {\n    return instance.delete<ResponseType>(`follow/${userId}`);\n  },\n\n  follow(userId: number) {\n    return instance.post<ResponseType>(`follow/${userId}`);\n  },\n};","import { UserType } from '../../reducer/user/types';\r\n\r\nexport const followAC = (userId: number) =>\r\n  ({ type: 'FOLLOW', userId } as const);\r\n\r\nexport const unfollowAC = (userId: number) =>\r\n  ({ type: 'UNFOLLOW', userId } as const);\r\n\r\nexport const setUsersAC = (users: Array<UserType>) =>\r\n  ({ type: 'SET-USER', users } as const);\r\n\r\nexport const setCurrentPageAC = (currentPage: number) =>\r\n  ({ type: 'SET-CURRENT-PAGE', currentPage } as const);\r\n\r\nexport const setUsersTotalCountAC = (totalCount: number) =>\r\n  ({ type: 'SET-USERS-TOTAL-COUNT', totalCount } as const);\r\n\r\nexport const toggleIsFetchingAC = (isFetching: boolean) =>\r\n  ({ type: 'TOGGLE-IS-FETCHING', isFetching } as const);\r\n\r\nexport const toggleIsFollowingProgressAC = (isFetching: boolean, userId: any) =>\r\n  ({ type: 'TOGGLE-IS-FOLLOWING-PROGRESS', isFetching, userId } as const);","import { Dispatch } from 'redux';\n\nimport { usersAPI } from '../../../api/user';\nimport { progressAC } from '../../actionCreator/app/actionCreators';\nimport {\n  setCurrentPageAC,\n  setUsersAC,\n  setUsersTotalCountAC,\n  toggleIsFetchingAC,\n} from '../../actionCreator/users/actionCreator';\n\nexport const getUsersTC = (currentPage: number, pageSize: number) => async (dispatch: Dispatch) => {\n  try {\n    dispatch(progressAC(false));\n    dispatch(toggleIsFetchingAC(true));\n    dispatch(setCurrentPageAC(currentPage));\n    const data = await usersAPI.getUsers(currentPage, pageSize);\n    dispatch(setUsersAC(data.items));\n    dispatch(setUsersTotalCountAC(data.totalCount));\n  } finally {\n    dispatch(progressAC(true));\n    dispatch(toggleIsFetchingAC(false));\n  }\n};","import { UserType } from '../../reducer/user/types';\r\nimport { AppStateType } from '../../store';\r\n\r\nexport const selectUsers = (state: AppStateType): UserType[] => state.usersPage.users;\r\nexport const selectPageSize = (state: AppStateType): number => state.usersPage.pageSize;\r\nexport const selectTotalUsersCount = (state: AppStateType): number => state.usersPage.totalUsersCount;\r\nexport const selectCurrentPage = (state: AppStateType): number => state.usersPage.currentPage;\r\nexport const selectFollowingInProgress = (state: AppStateType): number[] => state.usersPage.followingInProgress;\r\n\r\n","export default __webpack_public_path__ + \"static/media/leftArrow.1bc5754e.svg\";","export default __webpack_public_path__ + \"static/media/rightArrow.0684657e.svg\";","import React, { useState } from 'react';\n\nimport s from './paginator.module.css';\nimport { PaginatorPropsType } from './types';\n\nimport leftArrow from 'assets/images/leftArrow.svg';\nimport rightArrow from 'assets/images/rightArrow.svg';\n\nconst MAX_PAGE_NUMBER = 10;\n\nexport const Paginator = (props: PaginatorPropsType) => {\n  const {\n    pageSize,\n    totalUsersCount,\n    currentPage,\n    onPageChanged,\n    portionSize = MAX_PAGE_NUMBER,\n  } = props;\n\n  const [portionNumber, setPortionNumber] = useState(1);\n\n  const onIncrementPortionClick = () => {\n    setPortionNumber(portionNumber + 1);\n  };\n  const onDecrementPortionClick = () => {\n    setPortionNumber(portionNumber - 1);\n  };\n\n  const pagesCount = Math.ceil(totalUsersCount / pageSize);\n  const portionCount = Math.ceil(pagesCount / portionSize);\n  const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  const rightPortionPageNumber = portionNumber * portionSize;\n\n  const pages = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  return <div className={s.wrapperPaginator}>\n\n    {portionNumber > 1 &&\n      <button className={s.btn} onClick={onDecrementPortionClick}>\n        <img className={s.arrow} src={leftArrow} alt='leftArrow' />\n      </button>\n    }\n\n    {pages\n      .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n      .map((p) => <span\n        className={`${s.span} ${currentPage === p ? s.active : ''}`}\n        key={p}\n        onClick={() => onPageChanged(p)}>{p}</span>)\n    }\n\n    {portionCount > portionNumber &&\n      <button className={s.btn} onClick={onIncrementPortionClick}>\n        <img className={s.arrow} src={rightArrow} alt='rightArrow' />\n      </button>}\n  </div>;\n};\n","import { Dispatch } from 'redux';\n\nimport { RESPONSE_NUMBER } from '../../../enums/patch';\nimport { toggleIsFollowingProgressAC } from '../../actionCreator/users/actionCreator';\n\nexport const followUnfollowFlowTC = async (dispatch: Dispatch, userId: number, apiMethod: any, actionCreator: any) => {\n  dispatch(toggleIsFollowingProgressAC(true, userId));\n  const response = await apiMethod(userId);\n  if (response.data.resultCode === RESPONSE_NUMBER.COMPLETED_SUCCESSFULLY_NUMBER) {\n    dispatch(actionCreator(userId));\n  }\n  dispatch(toggleIsFollowingProgressAC(false, userId));\n};","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport { followTC } from '../../../redux/middlewares/users/followTC';\nimport { unfollowTC } from '../../../redux/middlewares/users/unfollowTC';\nimport s from '../Users.module.css';\n\nimport { UserPropsType } from './types';\n\nimport usersIcons from 'assets/images/users.png';\nimport { PATH } from 'enums/patch';\n\nexport const User = ({ ...props }: UserPropsType) => {\n\n  const { user, followingInProgress } = props;\n\n  const dispatch = useDispatch();\n\n  const onUnfollowUserClick = (id: number) => {\n    dispatch(unfollowTC(id));\n  };\n\n  const onFollowUserClick = (id: number) => {\n    dispatch(followTC(id));\n  };\n\n  return (\n    <div className={s.wrapper}>\n      <div>\n        <div>\n\n          <NavLink to={`${PATH.PROFILE}/${user.id}`}>\n            <img\n              src={user.photos.small != null ? user.photos.small : usersIcons}\n              className={s.userPhoto}\n              alt='usePhoto'\n            />\n          </NavLink>\n\n        </div>\n      </div>\n\n      <div>\n        <div>\n          <div className={s.name}>Name: <span className={s.nameSpan}>{user.name}</span></div>\n          <span className={s.status}>{user.status ? user.status : 'no status'}</span>\n\n          {user.followed\n            ? <button className={s.btn}\n                      disabled={followingInProgress.some(id => id === user.id)}\n                      onClick={() => onUnfollowUserClick(user.id)}>\n              Unfollow\n            </button>\n            : <button className={s.btn} disabled={followingInProgress.some(id => id === user.id)}\n                      onClick={() => onFollowUserClick(user.id)}>\n              Follow\n            </button>\n          }\n        </div>\n      </div>\n    </div>);\n};\n\n","import { Dispatch } from 'redux';\n\nimport { usersAPI } from '../../../api/user';\nimport { unfollowAC } from '../../actionCreator/users/actionCreator';\n\nimport { followUnfollowFlowTC } from './followUnfollowFlowTC';\n\nexport const unfollowTC = (userId: number) => async (dispatch: Dispatch) => {\n  await followUnfollowFlowTC(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowAC);\n};","import { Dispatch } from 'redux';\n\nimport { usersAPI } from '../../../api/user';\nimport { followAC } from '../../actionCreator/users/actionCreator';\n\nimport { followUnfollowFlowTC } from './followUnfollowFlowTC';\n\nexport const followTC = (userId: number) => async (dispatch: Dispatch) => {\n  await followUnfollowFlowTC(dispatch, userId, usersAPI.follow.bind(usersAPI), followAC);\n};","import React, { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { getUsersTC } from '../../redux/middlewares/users/getUsersTC';\nimport { selectIsAuth } from '../../redux/selectors/auth';\nimport {\n  selectCurrentPage,\n  selectFollowingInProgress,\n  selectPageSize,\n  selectTotalUsersCount,\n  selectUsers,\n} from '../../redux/selectors/users';\n\nimport s from './Users.module.css';\n\nimport { Paginator } from 'common/Paginator/Paginator';\nimport { User } from 'components/Users/User/User';\nimport { PATH } from 'enums/patch';\nimport { useAppSelector } from 'types/useAppSelector';\n\nexport const Users = () => {\n\n  const dispatch = useDispatch();\n\n  const currentPage = useAppSelector(selectCurrentPage);\n  const pageSize = useAppSelector(selectPageSize);\n  const totalUsersCount = useAppSelector(selectTotalUsersCount);\n  const followingInProgress = useAppSelector(selectFollowingInProgress);\n  const users = useAppSelector(selectUsers);\n  const isAuth = useAppSelector(selectIsAuth);\n\n  const onPageChanged = (pageNumber: number) => {\n    dispatch(getUsersTC(pageNumber, pageSize));\n  };\n\n  useEffect(() => {\n    dispatch(getUsersTC(currentPage, pageSize));\n  }, []);\n\n  if (!isAuth) {\n    return <Navigate to={PATH.LOGIN} />;\n  }\n  return <div className={s.wrapperUsers}>\n    {/* {isFetching && <img className={s.loader} src={loading} alt=\"loading\"/>} */}\n\n    <Paginator\n      currentPage={currentPage}\n      onPageChanged={onPageChanged}\n      totalUsersCount={totalUsersCount}\n      pageSize={pageSize}\n    />\n\n    <div className={s.boxUser}>\n      {\n        users.map(u => (\n            <User key={u.id}\n                  user={u}\n                  followingInProgress={followingInProgress}\n            />\n          ),\n        )\n      }\n    </div>\n  </div>;\n};\n\n","import { AppStateType } from '../../store';\r\n\r\nexport const selectIsProgress = (state: AppStateType): boolean => state.app.isProgress;\r\nexport const selectIsInitialized = (state: AppStateType): boolean => state.app.isInitialized;","import React, { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\n\nimport { ModalErrorMessage } from './common/ModalErrorMessage/ModalErrorMessage';\nimport { Preloader } from './common/preloader/Preloader';\nimport { Dialogs } from './components/Dialogs/Dialogs';\nimport { Header } from './components/Header/Header';\nimport { Login } from './components/Login/Login';\nimport { Me } from './components/Me/Me';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { Profile } from './components/Profile/Profile';\nimport { Users } from './components/Users/Users';\nimport { PATH } from './enums/patch';\nimport { getAuthUserDataTC } from './redux/middlewares/auth/getAuthUserDataTC';\nimport { selectIsInitialized, selectIsProgress } from './redux/selectors/app';\nimport { selectErrorMessage } from './redux/selectors/errorMessage';\n\nimport { useAppSelector } from 'types/useAppSelector';\n\nexport const App = () => {\n\n  const dispatch = useDispatch();\n\n  const errorMessage = useAppSelector(selectErrorMessage);\n  const isProgress = useAppSelector(selectIsProgress);\n  const isInitialized = useAppSelector(selectIsInitialized);\n\n  useEffect(() => {\n    dispatch(getAuthUserDataTC());\n  }, []);\n\n  if (!isInitialized) {\n    return <Preloader />;\n  }\n\n  return (\n    <>\n      <Header />\n\n      {errorMessage && <ModalErrorMessage />}\n\n      {!isProgress && <div className='nav'>\n        <div className='statusBar' />\n      </div>\n      }\n\n      <div className='app-wrapper'>\n\n        <Navigation />\n\n        <Routes>\n          <Route path={PATH.ME} element={<Me />} />\n          <Route path={`${PATH.PROFILE}/:userId`} element={<Profile />} />\n          <Route path={PATH.DIALOGS} element={<Dialogs />} />\n          <Route path={PATH.USERS} element={<Users />} />\n          <Route path={PATH.LOGIN} element={<Login />} />\n          <Route path={'/*'} element={<div>error</div>} />\n        </Routes>\n      </div>\n    </>\n  );\n};\n","import { GeneralType } from '../../actionCreator/app/types';\n\nimport { InitialStateType } from './types';\n\nconst initialState = {\n  isInitialized: false,\n  isProgress: true,\n  errorMessage: null,\n};\n\nexport const appReducer = (state: InitialStateType = initialState, action: GeneralType): InitialStateType => {\n  switch (action.type) {\n    case 'INITIALIZED-SUCCESS':\n      return { ...state, isInitialized: action.value };\n    case 'APP-ERROR':\n      return { ...state, errorMessage: action.value };\n    case 'PROGRESS':\n      return { ...state, isProgress: action.value };\n    default:\n      return state;\n  }\n};\n","import { GeneralType } from '../../actionCreator/auth/types';\r\n\r\nimport { InitialStateType } from './types';\r\n\r\nconst initialState = {\r\n  id: undefined,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaUrl: null,\r\n};\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: GeneralType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'SET-USER-DATA':\r\n      return { ...state, ...action.payload, isAuth: action.payload.isAuth };\r\n    case 'GET_CAPTCHA_URL_SUCCESS':\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n","import { GlobalReducerType } from '../../actionCreator/dialogs/types';\r\n\r\nimport { InitialStateType } from './types';\r\n\r\nconst initialState: InitialStateType = {\r\n  dialogs: [\r\n    { id: 1, name: 'Slava' },\r\n    { id: 2, name: 'Borya' },\r\n    { id: 3, name: 'Igor' },\r\n    { id: 4, name: 'Viktor' },\r\n  ],\r\n  messages: [\r\n    { id: 1, message: 'Hi how are you doing' },\r\n    { id: 2, message: 'I heard that you have problems' },\r\n    { id: 3, message: 'how is your health today' },\r\n    { id: 4, message: 'Where had you been?' },\r\n  ],\r\n};\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: GlobalReducerType): InitialStateType => {\r\n  switch (action.type) {\r\n    case  'SEND-MESSAGE':\r\n      return { ...state, messages: [...state.messages, { id: 6, message: action.newMessageBody }] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n","import { v1 } from 'uuid';\n\nimport { GlobalReducerType } from '../../actionCreator/profile/types';\n\nimport { InitialType } from './types';\n\nconst initialState: InitialType = {\n  posts: [\n    { id: v1(), message: 'Hi,how are you', likesCount: 0 },\n    { id: v1(), message: 'Hi, you', likesCount: 1 },\n    { id: v1(), message: 'Hi,how are you', likesCount: 0 },\n    { id: v1(), message: 'how are you', likesCount: 0 },\n  ],\n  profile: null,\n  status: '',\n};\n\nexport const profileReducer = (state: InitialType = initialState, action: GlobalReducerType): InitialType => {\n  switch (action.type) {\n    case 'ADD-POST':\n      return {\n        ...state,\n        posts: [...state.posts, { id: v1(), message: action.newPostBody, likesCount: 0 }],\n      };\n    case 'SET-USER-PROFILE':\n      return { ...state, profile: action.profile };\n    case 'SET-STATUS':\n      return { ...state, status: action.status };\n    case 'COUNTER': {\n      return {\n        ...state,\n        posts: [...state.posts.map(e => e.id === action.id ? { ...e, likesCount: action.likesCount } : e)],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\n","import { GlobalReducerType } from '../../actionCreator/users/types';\n\nimport { UsersType } from './types';\n\nconst initialState: UsersType = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: [],\n};\n\n// reducer\nexport const usersReducer = (state: UsersType = initialState, action: GlobalReducerType): UsersType => {\n  switch (action.type) {\n    case 'FOLLOW':\n      return { ...state, users: state.users.map(u => u.id === action.userId ? { ...u, followed: true } : u) };\n    case 'UNFOLLOW':\n      return { ...state, users: state.users.map(u => u.id === action.userId ? { ...u, followed: false } : u) };\n    case 'SET-USER':\n      return { ...state, users: [...action.users] };\n    case 'SET-CURRENT-PAGE':\n      return { ...state, currentPage: action.currentPage };\n    case 'SET-USERS-TOTAL-COUNT':\n      return { ...state, totalUsersCount: action.totalCount };\n    case 'TOGGLE-IS-FETCHING':\n      return { ...state, isFetching: action.isFetching };\n    case 'TOGGLE-IS-FOLLOWING-PROGRESS':\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter(id => id !== action.userId),\n      };\n    default:\n      return state;\n  }\n};\n\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducer as formReducer } from 'redux-form';\nimport thunk from 'redux-thunk';\n\nimport { appReducer } from './reducer/app/app-reducer';\nimport { authReducer } from './reducer/auth/auth-reducer';\nimport { dialogsReducer } from './reducer/dialogs/dialogs-reducer';\nimport { profileReducer } from './reducer/profile/profile-reducer';\nimport { usersReducer } from './reducer/user/users-reducer';\n\nconst reducers = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  app: appReducer,\n  form: formReducer,\n});\nexport type AppStateType = ReturnType<typeof reducers>\n\nexport const store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n","import React from 'react';\n\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"navigation_navigation__1kz7S\",\"navigation__item\":\"navigation_navigation__item__3lnvr\",\"navigation__link\":\"navigation_navigation__link__EVboG\",\"navigation__active\":\"navigation_navigation__active__3gih1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperPaginator\":\"paginator_wrapperPaginator__11cPR\",\"arrow\":\"paginator_arrow__3hN6X\",\"btn\":\"paginator_btn__1x78D\",\"active\":\"paginator_active__1lzh6\",\"span\":\"paginator_span__1Hryq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__3FNzr\",\"block\":\"Dialogs_block__Jw7X4\",\"item\":\"Dialogs_item__2eDoH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1V9iv\",\"posts\":\"MyPosts_posts__2Iz8x\",\"subtitle\":\"MyPosts_subtitle__1j497\",\"boxBtn\":\"MyPosts_boxBtn__ZY5gB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3-Ewb\",\"icons\":\"Post_icons__3WArY\",\"likesIcon\":\"Post_likesIcon__2BwZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"error_wrapper__uWiN5\",\"block\":\"error_block__1yy1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"style_img__2HQOT\",\"box\":\"style_box__2noti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__vKn3r\",\"error\":\"FormControls_error__3U5re\"};"],"sourceRoot":""}